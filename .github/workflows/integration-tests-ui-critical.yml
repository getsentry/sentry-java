name: UI Tests Critical

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BASE_PATH: "sentry-android-integration-tests/sentry-uitest-android-critical"
  BUILD_PATH: "build/outputs/apk/release"
  APK_NAME: "sentry-uitest-android-critical-release.apk"
  APK_ARTIFACT_NAME: "sentry-uitest-android-critical-release"

jobs:
  build:
    name: Build sentry-uitest-android-critical
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@bb0c460cbf5354b0cddd15bacdf0d6aaa3e5a32b # pin@v3
        with:
          gradle-home-cache-cleanup: true

      - name: Build debug APK
        run: make assembleUiTestCriticalRelease

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.APK_ARTIFACT_NAME}}
          path: "${{env.BASE_PATH}}/${{env.BUILD_PATH}}/${{env.APK_NAME}}"
          retention-days: 1

  run-maestro-tests:
    name: Run Maestro Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup KVM
        shell: bash
        run: |
          # check if virtualization is supported...
          sudo apt install -y --no-install-recommends cpu-checker coreutils && echo "CPUs=$(nproc --all)" && kvm-ok
          # allow access to KVM to run the emulator
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' \
            | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{env.APK_ARTIFACT_NAME}}

      - name: Install Maestro
        run: |
          brew tap mobile-dev-inc/tap
          brew install maestro

      - name: Run Maestro tests
        run: |
          maestro test \
            "${{env.BASE_PATH}}/maestro" \
            --debug-output "${{env.BASE_PATH}}/maestro-logs"

      - name: Upload Maestro test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: maestro-logs
          path: "${{env.BASE_PATH}}/maestro-logs"
          retention-days: 1
