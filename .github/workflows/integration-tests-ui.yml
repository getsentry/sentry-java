name: 'Integration Tests'
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Ui tests
    runs-on: ubuntu-latest

    # we copy the secret to the env variable in order to access it in the workflow
    env:
      SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: 'Set up Java: 17'
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@982da8e78c05368c70dac0351bb82647a9e9a5d2 # pin@v2

      # Clean, build and release a test apk, but only if we will run the benchmark
      - name: Make assembleUiTests
        if: env.SAUCE_USERNAME != null
        run: make assembleUiTests

      - name: Run Tests in SauceLab
        id: saucelabs
        uses: saucelabs/saucectl-run-action@7fe025ef1fdc6f211add3751a6c7d8bba27ba9b1 # pin@v3
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          sauce-username: ${{ secrets.SAUCE_USERNAME }}
          sauce-access-key: ${{ secrets.SAUCE_ACCESS_KEY }}
          config-file: .sauce/sentry-uitest-android-ui.yml
        if: env.SAUCE_USERNAME != null
        continue-on-error: true

      - name: Get Job ID
        id: get-job-id
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          jobs=$(gh api repos/${{ github.repository }}/actions/runs/${{ github.run_id}}/attempts/${{ github.run_attempt }}/jobs)
          job_id=$(echo $jobs | jq -r '.jobs[] | select(.runner_name=="${{ runner.name }}") | .id')
          echo "job_id=$job_id" >> $GITHUB_OUTPUT

      - name: Verify Test Results
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          previousStepLogs="$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/getsentry/sentry-java/actions/jobs/${{ steps.get-job-id.outputs.job_id }}/logs)"

          processCrashed=$(grep "Instrumentation run failed due to 'Process crashed.'" <<< "$previousStepLogs" | wc -l)
          if [[ ${{ steps.saucelabs.outcome }} = 'success' ]]; then
            exit 0
          elif [[ $processCrashed != "0" ]]; then
            exit 0
          else
            exit 1
          fi
