name: AGP Matrix Compatibility

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  agp-matrix-compatibility:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        agp: [ '8.7.0','8.8.0','8.9.0' ]
        integrations: [ true, false ]

    name: AGP Matrix Release - AGP ${{ matrix.agp }} - Integrations ${{ matrix.integrations }}
    env:
      VERSION_AGP: ${{ matrix.agp }}
      APPLY_SENTRY_INTEGRATIONS: ${{ matrix.integrations }}
      GRADLE_ENCRYPTION_KEY: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5
        with:
          submodules: 'recursive'

      - name: Setup Java Version
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@4d9f0ba0025fe599b4ebab900eb7f3a1d93ef4c2
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-api-30-x86_64-aosp_atd

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # pin@v2
        with:
          api-level: 30
          target: aosp_atd
          channel: canary # Necessary for ATDs
          arch: x86_64
          force-avd-creation: false
          disable-animations: true
          disable-spellchecker: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disk-size: 4096M
          script: echo "Generated AVD snapshot for caching."

      # Clean, build and release a test apk
      - name: Make assembleUiTests
        run: make assembleUiTests

      # We tried to use the cache action to cache gradle stuff, but it made tests slower and timeout
      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # pin@v2
        with:
          api-level: 30
          target: aosp_atd
          channel: canary # Necessary for ATDs
          arch: x86_64
          force-avd-creation: false
          disable-animations: true
          disable-spellchecker: true
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disk-size: 4096M
          script: ./gradlew sentry-android-integration-tests:sentry-uitest-android:connectedReleaseAndroidTest -DtestBuildType=release -Denvironment=github --daemon

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-AGP${{ matrix.agp }}-Integrations${{ matrix.integrations }}
          path: |
            **/build/reports/*
            **/build/outputs/*/connected/*
            **/build/outputs/mapping/release/*

      - name: Test Report
        uses: phoenix-actions/test-reporting@f957cd93fc2d848d556fa0d03c57bc79127b6b5e # pin@v15
        if: always()
        with:
          name: JUnit AGP ${{ matrix.agp }} - Integrations ${{ matrix.integrations }}
          path: |
            **/build/outputs/androidTest-results/**/*.xml
          reporter: java-junit
          output-to: step-summary
          fail-on-error: false

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: build/outputs/androidTest-results/**/*.xml
