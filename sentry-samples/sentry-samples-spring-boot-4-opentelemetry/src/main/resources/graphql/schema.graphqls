type Query {
    greeting(name: String! = "Spring"): String!
    project(slug: ID!): Project
    tasks(projectSlug: ID!): [Task]
}

type Mutation {
    addProject(slug: ID!): String!
}

type Subscription {
    notifyNewTask(projectSlug: ID!): Task
}

""" A Project in the Spring portfolio """
type Project {
    """ Unique string id used in URLs """
    slug: ID!
    """ Project name """
    name: String
    """ Current support status """
    status: ProjectStatus!
}

""" A task """
type Task {
    """ ID """
    id: String!
    """ Name """
    name: String!
    """ ID of the Assignee """
    assigneeId: String
    """ Assignee """
    assignee: Assignee
    """ ID of the Creator """
    creatorId: String
    """ Creator """
    creator: Creator
}

""" An Assignee """
type Assignee {
    """ ID """
    id: String!
    """ Name """
    name: String!
}

""" An Creator """
type Creator {
    """ ID """
    id: String!
    """ Name """
    name: String!
}

enum ProjectStatus {
    """ Actively supported by the Spring team """
    ACTIVE
    """ Supported by the community """
    COMMUNITY
    """ Prototype, not officially supported yet  """
    INCUBATING
    """ Project being retired, in maintenance mode """
    ATTIC
    """ End-Of-Lifed """
    EOL
}
