public final class io/sentry/apollo4/BuildConfig {
	public static final field SENTRY_APOLLO4_SDK_NAME Ljava/lang/String;
	public static final field VERSION_NAME Ljava/lang/String;
}

public final class io/sentry/apollo4/SentryApollo4ClientException : java/lang/Exception {
	public static final field Companion Lio/sentry/apollo4/SentryApollo4ClientException$Companion;
	public fun <init> (Ljava/lang/String;)V
}

public final class io/sentry/apollo4/SentryApollo4ClientException$Companion {
}

public final class io/sentry/apollo4/SentryApollo4HttpInterceptor : com/apollographql/apollo4/network/http/HttpInterceptor {
	public static final field Companion Lio/sentry/apollo4/SentryApollo4HttpInterceptor$Companion;
	public static final field DEFAULT_CAPTURE_FAILED_REQUESTS Z
	public static final field SENTRY_APOLLO_3_OPERATION_TYPE Ljava/lang/String;
	public static final field SENTRY_APOLLO_3_VARIABLES Ljava/lang/String;
	public fun <init> ()V
	public fun <init> (Lio/sentry/IScopes;)V
	public fun <init> (Lio/sentry/IScopes;Lio/sentry/apollo4/SentryApollo4HttpInterceptor$BeforeSpanCallback;)V
	public fun <init> (Lio/sentry/IScopes;Lio/sentry/apollo4/SentryApollo4HttpInterceptor$BeforeSpanCallback;Z)V
	public fun <init> (Lio/sentry/IScopes;Lio/sentry/apollo4/SentryApollo4HttpInterceptor$BeforeSpanCallback;ZLjava/util/List;)V
	public synthetic fun <init> (Lio/sentry/IScopes;Lio/sentry/apollo4/SentryApollo4HttpInterceptor$BeforeSpanCallback;ZLjava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun dispose ()V
	public fun intercept (Lcom/apollographql/apollo4/api/http/HttpRequest;Lcom/apollographql/apollo4/network/http/HttpInterceptorChain;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class io/sentry/apollo4/SentryApollo4HttpInterceptor$BeforeSpanCallback {
	public abstract fun execute (Lio/sentry/ISpan;Lcom/apollographql/apollo4/api/http/HttpRequest;Lcom/apollographql/apollo4/api/http/HttpResponse;)Lio/sentry/ISpan;
}

public final class io/sentry/apollo4/SentryApollo4HttpInterceptor$Companion {
}

public final class io/sentry/apollo4/SentryApollo4Interceptor : com/apollographql/apollo4/interceptor/ApolloInterceptor {
	public fun <init> ()V
	public fun intercept (Lcom/apollographql/apollo4/api/ApolloRequest;Lcom/apollographql/apollo4/interceptor/ApolloInterceptorChain;)Lkotlinx/coroutines/flow/Flow;
}

public final class io/sentry/apollo4/SentryApolloBuilderExtensionsKt {
	public static final fun sentryTracing (Lcom/apollographql/apollo4/ApolloClient$Builder;)Lcom/apollographql/apollo4/ApolloClient$Builder;
	public static final fun sentryTracing (Lcom/apollographql/apollo4/ApolloClient$Builder;Lio/sentry/IScopes;)Lcom/apollographql/apollo4/ApolloClient$Builder;
	public static final fun sentryTracing (Lcom/apollographql/apollo4/ApolloClient$Builder;Lio/sentry/IScopes;Z)Lcom/apollographql/apollo4/ApolloClient$Builder;
	public static final fun sentryTracing (Lcom/apollographql/apollo4/ApolloClient$Builder;Lio/sentry/IScopes;ZLjava/util/List;)Lcom/apollographql/apollo4/ApolloClient$Builder;
	public static final fun sentryTracing (Lcom/apollographql/apollo4/ApolloClient$Builder;Lio/sentry/IScopes;ZLjava/util/List;Lio/sentry/apollo4/SentryApollo4HttpInterceptor$BeforeSpanCallback;)Lcom/apollographql/apollo4/ApolloClient$Builder;
	public static final fun sentryTracing (Lcom/apollographql/apollo4/ApolloClient$Builder;ZLjava/util/List;Lio/sentry/apollo4/SentryApollo4HttpInterceptor$BeforeSpanCallback;)Lcom/apollographql/apollo4/ApolloClient$Builder;
	public static synthetic fun sentryTracing$default (Lcom/apollographql/apollo4/ApolloClient$Builder;Lio/sentry/IScopes;ZLjava/util/List;Lio/sentry/apollo4/SentryApollo4HttpInterceptor$BeforeSpanCallback;ILjava/lang/Object;)Lcom/apollographql/apollo4/ApolloClient$Builder;
	public static synthetic fun sentryTracing$default (Lcom/apollographql/apollo4/ApolloClient$Builder;ZLjava/util/List;Lio/sentry/apollo4/SentryApollo4HttpInterceptor$BeforeSpanCallback;ILjava/lang/Object;)Lcom/apollographql/apollo4/ApolloClient$Builder;
}

