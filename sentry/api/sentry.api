public final class io/sentry/AsyncHttpTransportFactory : io/sentry/ITransportFactory {
	public fun <init> ()V
	public fun create (Lio/sentry/SentryOptions;Lio/sentry/RequestDetails;)Lio/sentry/transport/ITransport;
}

public final class io/sentry/Attachment {
	public fun <init> (Lio/sentry/JsonSerializable;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
	public fun <init> ([BLjava/lang/String;)V
	public fun <init> ([BLjava/lang/String;Ljava/lang/String;)V
	public fun <init> ([BLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
	public fun <init> ([BLjava/lang/String;Ljava/lang/String;Z)V
	public static fun fromScreenshot ([B)Lio/sentry/Attachment;
	public static fun fromViewHierarchy (Lio/sentry/protocol/ViewHierarchy;)Lio/sentry/Attachment;
	public fun getAttachmentType ()Ljava/lang/String;
	public fun getBytes ()[B
	public fun getContentType ()Ljava/lang/String;
	public fun getFilename ()Ljava/lang/String;
	public fun getPathname ()Ljava/lang/String;
	public fun getSerializable ()Lio/sentry/JsonSerializable;
}

public final class io/sentry/Baggage {
	public fun <init> (Lio/sentry/ILogger;)V
	public fun <init> (Ljava/util/Map;Ljava/lang/String;ZLio/sentry/ILogger;)V
	public fun freeze ()V
	public static fun fromHeader (Ljava/lang/String;)Lio/sentry/Baggage;
	public static fun fromHeader (Ljava/lang/String;Lio/sentry/ILogger;)Lio/sentry/Baggage;
	public static fun fromHeader (Ljava/lang/String;ZLio/sentry/ILogger;)Lio/sentry/Baggage;
	public static fun fromHeader (Ljava/util/List;)Lio/sentry/Baggage;
	public static fun fromHeader (Ljava/util/List;Lio/sentry/ILogger;)Lio/sentry/Baggage;
	public static fun fromHeader (Ljava/util/List;ZLio/sentry/ILogger;)Lio/sentry/Baggage;
	public fun get (Ljava/lang/String;)Ljava/lang/String;
	public fun getEnvironment ()Ljava/lang/String;
	public fun getPublicKey ()Ljava/lang/String;
	public fun getRelease ()Ljava/lang/String;
	public fun getSampleRate ()Ljava/lang/String;
	public fun getSampleRateDouble ()Ljava/lang/Double;
	public fun getThirdPartyHeader ()Ljava/lang/String;
	public fun getTraceId ()Ljava/lang/String;
	public fun getTransaction ()Ljava/lang/String;
	public fun getUserId ()Ljava/lang/String;
	public fun getUserSegment ()Ljava/lang/String;
	public fun isMutable ()Z
	public fun set (Ljava/lang/String;Ljava/lang/String;)V
	public fun setEnvironment (Ljava/lang/String;)V
	public fun setPublicKey (Ljava/lang/String;)V
	public fun setRelease (Ljava/lang/String;)V
	public fun setSampleRate (Ljava/lang/String;)V
	public fun setTraceId (Ljava/lang/String;)V
	public fun setTransaction (Ljava/lang/String;)V
	public fun setUserId (Ljava/lang/String;)V
	public fun setUserSegment (Ljava/lang/String;)V
	public fun setValuesFromTransaction (Lio/sentry/ITransaction;Lio/sentry/protocol/User;Lio/sentry/SentryOptions;Lio/sentry/TracesSamplingDecision;)V
	public fun toHeaderString (Ljava/lang/String;)Ljava/lang/String;
	public fun toTraceContext ()Lio/sentry/TraceContext;
}

public final class io/sentry/Baggage$DSCKeys {
	public static final field ENVIRONMENT Ljava/lang/String;
	public static final field PUBLIC_KEY Ljava/lang/String;
	public static final field RELEASE Ljava/lang/String;
	public static final field SAMPLE_RATE Ljava/lang/String;
	public static final field TRACE_ID Ljava/lang/String;
	public static final field TRANSACTION Ljava/lang/String;
	public static final field USER_ID Ljava/lang/String;
	public static final field USER_SEGMENT Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/BaggageHeader {
	public static final field BAGGAGE_HEADER Ljava/lang/String;
	public fun <init> (Ljava/lang/String;)V
	public static fun fromBaggageAndOutgoingHeader (Lio/sentry/Baggage;Ljava/util/List;)Lio/sentry/BaggageHeader;
	public fun getName ()Ljava/lang/String;
	public fun getValue ()Ljava/lang/String;
}

public final class io/sentry/Breadcrumb : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/util/Date;)V
	public static fun debug (Ljava/lang/String;)Lio/sentry/Breadcrumb;
	public static fun error (Ljava/lang/String;)Lio/sentry/Breadcrumb;
	public fun getCategory ()Ljava/lang/String;
	public fun getData ()Ljava/util/Map;
	public fun getData (Ljava/lang/String;)Ljava/lang/Object;
	public fun getLevel ()Lio/sentry/SentryLevel;
	public fun getMessage ()Ljava/lang/String;
	public fun getTimestamp ()Ljava/util/Date;
	public fun getType ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public static fun http (Ljava/lang/String;Ljava/lang/String;)Lio/sentry/Breadcrumb;
	public static fun http (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lio/sentry/Breadcrumb;
	public static fun info (Ljava/lang/String;)Lio/sentry/Breadcrumb;
	public static fun navigation (Ljava/lang/String;Ljava/lang/String;)Lio/sentry/Breadcrumb;
	public static fun query (Ljava/lang/String;)Lio/sentry/Breadcrumb;
	public fun removeData (Ljava/lang/String;)V
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setCategory (Ljava/lang/String;)V
	public fun setData (Ljava/lang/String;Ljava/lang/Object;)V
	public fun setLevel (Lio/sentry/SentryLevel;)V
	public fun setMessage (Ljava/lang/String;)V
	public fun setType (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
	public static fun transaction (Ljava/lang/String;)Lio/sentry/Breadcrumb;
	public static fun ui (Ljava/lang/String;Ljava/lang/String;)Lio/sentry/Breadcrumb;
	public static fun user (Ljava/lang/String;Ljava/lang/String;)Lio/sentry/Breadcrumb;
	public static fun userInteraction (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/sentry/Breadcrumb;
	public static fun userInteraction (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lio/sentry/Breadcrumb;
	public static fun userInteraction (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lio/sentry/Breadcrumb;
}

public final class io/sentry/Breadcrumb$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/Breadcrumb;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/Breadcrumb$JsonKeys {
	public static final field CATEGORY Ljava/lang/String;
	public static final field DATA Ljava/lang/String;
	public static final field LEVEL Ljava/lang/String;
	public static final field MESSAGE Ljava/lang/String;
	public static final field TIMESTAMP Ljava/lang/String;
	public static final field TYPE Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/BuildConfig {
	public static final field SENTRY_JAVA_SDK_NAME Ljava/lang/String;
	public static final field VERSION_NAME Ljava/lang/String;
}

public final class io/sentry/CpuCollectionData {
	public fun <init> (JD)V
	public fun getCpuUsagePercentage ()D
	public fun getTimestampMillis ()J
}

public final class io/sentry/CustomSamplingContext {
	public fun <init> ()V
	public fun get (Ljava/lang/String;)Ljava/lang/Object;
	public fun getData ()Ljava/util/Map;
	public fun set (Ljava/lang/String;Ljava/lang/Object;)V
}

public final class io/sentry/DataCategory : java/lang/Enum {
	public static final field All Lio/sentry/DataCategory;
	public static final field Attachment Lio/sentry/DataCategory;
	public static final field Default Lio/sentry/DataCategory;
	public static final field Error Lio/sentry/DataCategory;
	public static final field Security Lio/sentry/DataCategory;
	public static final field Session Lio/sentry/DataCategory;
	public static final field Transaction Lio/sentry/DataCategory;
	public static final field Unknown Lio/sentry/DataCategory;
	public static final field UserReport Lio/sentry/DataCategory;
	public fun getCategory ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lio/sentry/DataCategory;
	public static fun values ()[Lio/sentry/DataCategory;
}

public final class io/sentry/DateUtils {
	public static fun dateToNanos (Ljava/util/Date;)J
	public static fun dateToSeconds (Ljava/util/Date;)D
	public static fun getCurrentDateTime ()Ljava/util/Date;
	public static fun getDateTime (J)Ljava/util/Date;
	public static fun getDateTime (Ljava/lang/String;)Ljava/util/Date;
	public static fun getDateTimeWithMillisPrecision (Ljava/lang/String;)Ljava/util/Date;
	public static fun getTimestamp (Ljava/util/Date;)Ljava/lang/String;
	public static fun millisToNanos (J)J
	public static fun millisToSeconds (D)D
	public static fun nanosToDate (J)Ljava/util/Date;
	public static fun nanosToMillis (D)D
	public static fun nanosToSeconds (J)D
	public static fun secondsToNanos (J)J
	public static fun toUtilDate (Lio/sentry/SentryDate;)Ljava/util/Date;
	public static fun toUtilDateNotNull (Lio/sentry/SentryDate;)Ljava/util/Date;
}

public final class io/sentry/DefaultTransactionPerformanceCollector : io/sentry/TransactionPerformanceCollector {
	public fun <init> (Lio/sentry/SentryOptions;)V
	public fun start (Lio/sentry/ITransaction;)V
	public fun stop (Lio/sentry/ITransaction;)Ljava/util/List;
}

public final class io/sentry/DiagnosticLogger : io/sentry/ILogger {
	public fun <init> (Lio/sentry/SentryOptions;Lio/sentry/ILogger;)V
	public fun getLogger ()Lio/sentry/ILogger;
	public fun isEnabled (Lio/sentry/SentryLevel;)Z
	public fun log (Lio/sentry/SentryLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun log (Lio/sentry/SentryLevel;Ljava/lang/String;[Ljava/lang/Object;)V
	public fun log (Lio/sentry/SentryLevel;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
}

public final class io/sentry/DsnUtil {
	public fun <init> ()V
	public static fun urlContainsDsnHost (Lio/sentry/SentryOptions;Ljava/lang/String;)Z
}

public final class io/sentry/DuplicateEventDetectionEventProcessor : io/sentry/EventProcessor {
	public fun <init> (Lio/sentry/SentryOptions;)V
	public fun process (Lio/sentry/SentryEvent;Lio/sentry/Hint;)Lio/sentry/SentryEvent;
}

public final class io/sentry/EnvelopeReader : io/sentry/IEnvelopeReader {
	public fun <init> (Lio/sentry/ISerializer;)V
	public fun read (Ljava/io/InputStream;)Lio/sentry/SentryEnvelope;
}

public final class io/sentry/EnvelopeSender : io/sentry/IEnvelopeSender {
	public fun <init> (Lio/sentry/IHub;Lio/sentry/ISerializer;Lio/sentry/ILogger;J)V
	public synthetic fun processDirectory (Ljava/io/File;)V
	public fun processEnvelopeFile (Ljava/lang/String;Lio/sentry/Hint;)V
}

public abstract interface class io/sentry/EventProcessor {
	public fun process (Lio/sentry/SentryEvent;Lio/sentry/Hint;)Lio/sentry/SentryEvent;
	public fun process (Lio/sentry/protocol/SentryTransaction;Lio/sentry/Hint;)Lio/sentry/protocol/SentryTransaction;
}

public final class io/sentry/ExternalOptions {
	public fun <init> ()V
	public fun addContextTag (Ljava/lang/String;)V
	public fun addIgnoredExceptionForType (Ljava/lang/Class;)V
	public fun addInAppExclude (Ljava/lang/String;)V
	public fun addInAppInclude (Ljava/lang/String;)V
	public fun addTracePropagationTarget (Ljava/lang/String;)V
	public fun addTracingOrigin (Ljava/lang/String;)V
	public static fun from (Lio/sentry/config/PropertiesProvider;Lio/sentry/ILogger;)Lio/sentry/ExternalOptions;
	public fun getContextTags ()Ljava/util/List;
	public fun getDebug ()Ljava/lang/Boolean;
	public fun getDist ()Ljava/lang/String;
	public fun getDsn ()Ljava/lang/String;
	public fun getEnableDeduplication ()Ljava/lang/Boolean;
	public fun getEnableTracing ()Ljava/lang/Boolean;
	public fun getEnableUncaughtExceptionHandler ()Ljava/lang/Boolean;
	public fun getEnvironment ()Ljava/lang/String;
	public fun getIdleTimeout ()Ljava/lang/Long;
	public fun getIgnoredExceptionsForType ()Ljava/util/Set;
	public fun getInAppExcludes ()Ljava/util/List;
	public fun getInAppIncludes ()Ljava/util/List;
	public fun getMaxRequestBodySize ()Lio/sentry/SentryOptions$RequestSize;
	public fun getPrintUncaughtStackTrace ()Ljava/lang/Boolean;
	public fun getProfilesSampleRate ()Ljava/lang/Double;
	public fun getProguardUuid ()Ljava/lang/String;
	public fun getProxy ()Lio/sentry/SentryOptions$Proxy;
	public fun getRelease ()Ljava/lang/String;
	public fun getSendClientReports ()Ljava/lang/Boolean;
	public fun getServerName ()Ljava/lang/String;
	public fun getTags ()Ljava/util/Map;
	public fun getTracePropagationTargets ()Ljava/util/List;
	public fun getTracesSampleRate ()Ljava/lang/Double;
	public fun getTracingOrigins ()Ljava/util/List;
	public fun setDebug (Ljava/lang/Boolean;)V
	public fun setDist (Ljava/lang/String;)V
	public fun setDsn (Ljava/lang/String;)V
	public fun setEnableDeduplication (Ljava/lang/Boolean;)V
	public fun setEnableTracing (Ljava/lang/Boolean;)V
	public fun setEnableUncaughtExceptionHandler (Ljava/lang/Boolean;)V
	public fun setEnvironment (Ljava/lang/String;)V
	public fun setIdleTimeout (Ljava/lang/Long;)V
	public fun setMaxRequestBodySize (Lio/sentry/SentryOptions$RequestSize;)V
	public fun setPrintUncaughtStackTrace (Ljava/lang/Boolean;)V
	public fun setProfilesSampleRate (Ljava/lang/Double;)V
	public fun setProguardUuid (Ljava/lang/String;)V
	public fun setProxy (Lio/sentry/SentryOptions$Proxy;)V
	public fun setRelease (Ljava/lang/String;)V
	public fun setSendClientReports (Ljava/lang/Boolean;)V
	public fun setServerName (Ljava/lang/String;)V
	public fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public fun setTracesSampleRate (Ljava/lang/Double;)V
}

public final class io/sentry/FullyDisplayedReporter {
	public static fun getInstance ()Lio/sentry/FullyDisplayedReporter;
	public fun registerFullyDrawnListener (Lio/sentry/FullyDisplayedReporter$FullyDisplayedReporterListener;)V
	public fun reportFullyDrawn ()V
}

public abstract interface class io/sentry/FullyDisplayedReporter$FullyDisplayedReporterListener {
	public abstract fun onFullyDrawn ()V
}

public final class io/sentry/Hint {
	public fun <init> ()V
	public fun addAttachment (Lio/sentry/Attachment;)V
	public fun addAttachments (Ljava/util/List;)V
	public fun clear ()V
	public fun clearAttachments ()V
	public fun get (Ljava/lang/String;)Ljava/lang/Object;
	public fun getAs (Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
	public fun getAttachments ()Ljava/util/List;
	public fun getScreenshot ()Lio/sentry/Attachment;
	public fun getViewHierarchy ()Lio/sentry/Attachment;
	public fun remove (Ljava/lang/String;)V
	public fun replaceAttachments (Ljava/util/List;)V
	public fun set (Ljava/lang/String;Ljava/lang/Object;)V
	public fun setScreenshot (Lio/sentry/Attachment;)V
	public fun setViewHierarchy (Lio/sentry/Attachment;)V
	public static fun withAttachment (Lio/sentry/Attachment;)Lio/sentry/Hint;
	public static fun withAttachments (Ljava/util/List;)Lio/sentry/Hint;
}

public final class io/sentry/HttpStatusCodeRange {
	public static final field DEFAULT_MAX I
	public static final field DEFAULT_MIN I
	public fun <init> (I)V
	public fun <init> (II)V
	public fun isInRange (I)Z
}

public final class io/sentry/Hub : io/sentry/IHub {
	public fun <init> (Lio/sentry/SentryOptions;)V
	public fun addBreadcrumb (Lio/sentry/Breadcrumb;Lio/sentry/Hint;)V
	public fun bindClient (Lio/sentry/ISentryClient;)V
	public fun captureEnvelope (Lio/sentry/SentryEnvelope;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/Hint;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public fun captureException (Ljava/lang/Throwable;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureException (Ljava/lang/Throwable;Lio/sentry/Hint;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public fun captureMessage (Ljava/lang/String;Lio/sentry/SentryLevel;)Lio/sentry/protocol/SentryId;
	public fun captureMessage (Ljava/lang/String;Lio/sentry/SentryLevel;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public fun captureTransaction (Lio/sentry/protocol/SentryTransaction;Lio/sentry/TraceContext;Lio/sentry/Hint;Lio/sentry/ProfilingTraceData;)Lio/sentry/protocol/SentryId;
	public fun captureUserFeedback (Lio/sentry/UserFeedback;)V
	public fun clearBreadcrumbs ()V
	public fun clone ()Lio/sentry/IHub;
	public synthetic fun clone ()Ljava/lang/Object;
	public fun close ()V
	public fun configureScope (Lio/sentry/ScopeCallback;)V
	public fun endSession ()V
	public fun flush (J)V
	public fun getLastEventId ()Lio/sentry/protocol/SentryId;
	public fun getOptions ()Lio/sentry/SentryOptions;
	public fun getSpan ()Lio/sentry/ISpan;
	public fun isCrashedLastRun ()Ljava/lang/Boolean;
	public fun isEnabled ()Z
	public fun popScope ()V
	public fun pushScope ()V
	public fun removeExtra (Ljava/lang/String;)V
	public fun removeTag (Ljava/lang/String;)V
	public fun reportFullyDisplayed ()V
	public fun setExtra (Ljava/lang/String;Ljava/lang/String;)V
	public fun setFingerprint (Ljava/util/List;)V
	public fun setLevel (Lio/sentry/SentryLevel;)V
	public fun setSpanContext (Ljava/lang/Throwable;Lio/sentry/ISpan;Ljava/lang/String;)V
	public fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public fun setTransaction (Ljava/lang/String;)V
	public fun setUser (Lio/sentry/protocol/User;)V
	public fun startSession ()V
	public fun startTransaction (Lio/sentry/TransactionContext;Lio/sentry/CustomSamplingContext;Z)Lio/sentry/ITransaction;
	public fun startTransaction (Lio/sentry/TransactionContext;Lio/sentry/TransactionOptions;)Lio/sentry/ITransaction;
	public fun traceHeaders ()Lio/sentry/SentryTraceHeader;
	public fun withScope (Lio/sentry/ScopeCallback;)V
}

public final class io/sentry/HubAdapter : io/sentry/IHub {
	public fun addBreadcrumb (Lio/sentry/Breadcrumb;Lio/sentry/Hint;)V
	public fun bindClient (Lio/sentry/ISentryClient;)V
	public fun captureEnvelope (Lio/sentry/SentryEnvelope;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/Hint;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public fun captureException (Ljava/lang/Throwable;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureException (Ljava/lang/Throwable;Lio/sentry/Hint;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public fun captureMessage (Ljava/lang/String;Lio/sentry/SentryLevel;)Lio/sentry/protocol/SentryId;
	public fun captureMessage (Ljava/lang/String;Lio/sentry/SentryLevel;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public fun captureTransaction (Lio/sentry/protocol/SentryTransaction;Lio/sentry/TraceContext;Lio/sentry/Hint;Lio/sentry/ProfilingTraceData;)Lio/sentry/protocol/SentryId;
	public fun captureUserFeedback (Lio/sentry/UserFeedback;)V
	public fun clearBreadcrumbs ()V
	public fun clone ()Lio/sentry/IHub;
	public synthetic fun clone ()Ljava/lang/Object;
	public fun close ()V
	public fun configureScope (Lio/sentry/ScopeCallback;)V
	public fun endSession ()V
	public fun flush (J)V
	public static fun getInstance ()Lio/sentry/HubAdapter;
	public fun getLastEventId ()Lio/sentry/protocol/SentryId;
	public fun getOptions ()Lio/sentry/SentryOptions;
	public fun getSpan ()Lio/sentry/ISpan;
	public fun isCrashedLastRun ()Ljava/lang/Boolean;
	public fun isEnabled ()Z
	public fun popScope ()V
	public fun pushScope ()V
	public fun removeExtra (Ljava/lang/String;)V
	public fun removeTag (Ljava/lang/String;)V
	public fun reportFullyDisplayed ()V
	public fun setExtra (Ljava/lang/String;Ljava/lang/String;)V
	public fun setFingerprint (Ljava/util/List;)V
	public fun setLevel (Lio/sentry/SentryLevel;)V
	public fun setSpanContext (Ljava/lang/Throwable;Lio/sentry/ISpan;Ljava/lang/String;)V
	public fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public fun setTransaction (Ljava/lang/String;)V
	public fun setUser (Lio/sentry/protocol/User;)V
	public fun startSession ()V
	public fun startTransaction (Lio/sentry/TransactionContext;)Lio/sentry/ITransaction;
	public fun startTransaction (Lio/sentry/TransactionContext;Lio/sentry/CustomSamplingContext;Z)Lio/sentry/ITransaction;
	public fun startTransaction (Lio/sentry/TransactionContext;Lio/sentry/TransactionOptions;)Lio/sentry/ITransaction;
	public fun traceHeaders ()Lio/sentry/SentryTraceHeader;
	public fun withScope (Lio/sentry/ScopeCallback;)V
}

public abstract interface class io/sentry/ICollector {
	public abstract fun collect (Lio/sentry/PerformanceCollectionData;)V
	public abstract fun setup ()V
}

public abstract interface class io/sentry/IEnvelopeReader {
	public abstract fun read (Ljava/io/InputStream;)Lio/sentry/SentryEnvelope;
}

public abstract interface class io/sentry/IEnvelopeSender {
	public abstract fun processEnvelopeFile (Ljava/lang/String;Lio/sentry/Hint;)V
}

public abstract interface class io/sentry/IHub {
	public fun addBreadcrumb (Lio/sentry/Breadcrumb;)V
	public abstract fun addBreadcrumb (Lio/sentry/Breadcrumb;Lio/sentry/Hint;)V
	public fun addBreadcrumb (Ljava/lang/String;)V
	public fun addBreadcrumb (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun bindClient (Lio/sentry/ISentryClient;)V
	public fun captureEnvelope (Lio/sentry/SentryEnvelope;)Lio/sentry/protocol/SentryId;
	public abstract fun captureEnvelope (Lio/sentry/SentryEnvelope;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureEvent (Lio/sentry/SentryEvent;)Lio/sentry/protocol/SentryId;
	public abstract fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public abstract fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/Hint;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public fun captureException (Ljava/lang/Throwable;)Lio/sentry/protocol/SentryId;
	public abstract fun captureException (Ljava/lang/Throwable;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public abstract fun captureException (Ljava/lang/Throwable;Lio/sentry/Hint;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public fun captureException (Ljava/lang/Throwable;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public fun captureMessage (Ljava/lang/String;)Lio/sentry/protocol/SentryId;
	public fun captureMessage (Ljava/lang/String;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public abstract fun captureMessage (Ljava/lang/String;Lio/sentry/SentryLevel;)Lio/sentry/protocol/SentryId;
	public abstract fun captureMessage (Ljava/lang/String;Lio/sentry/SentryLevel;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public fun captureTransaction (Lio/sentry/protocol/SentryTransaction;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureTransaction (Lio/sentry/protocol/SentryTransaction;Lio/sentry/TraceContext;)Lio/sentry/protocol/SentryId;
	public fun captureTransaction (Lio/sentry/protocol/SentryTransaction;Lio/sentry/TraceContext;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public abstract fun captureTransaction (Lio/sentry/protocol/SentryTransaction;Lio/sentry/TraceContext;Lio/sentry/Hint;Lio/sentry/ProfilingTraceData;)Lio/sentry/protocol/SentryId;
	public abstract fun captureUserFeedback (Lio/sentry/UserFeedback;)V
	public abstract fun clearBreadcrumbs ()V
	public abstract fun clone ()Lio/sentry/IHub;
	public abstract fun close ()V
	public abstract fun configureScope (Lio/sentry/ScopeCallback;)V
	public abstract fun endSession ()V
	public abstract fun flush (J)V
	public abstract fun getLastEventId ()Lio/sentry/protocol/SentryId;
	public abstract fun getOptions ()Lio/sentry/SentryOptions;
	public abstract fun getSpan ()Lio/sentry/ISpan;
	public abstract fun isCrashedLastRun ()Ljava/lang/Boolean;
	public abstract fun isEnabled ()Z
	public abstract fun popScope ()V
	public abstract fun pushScope ()V
	public abstract fun removeExtra (Ljava/lang/String;)V
	public abstract fun removeTag (Ljava/lang/String;)V
	public fun reportFullDisplayed ()V
	public abstract fun reportFullyDisplayed ()V
	public abstract fun setExtra (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun setFingerprint (Ljava/util/List;)V
	public abstract fun setLevel (Lio/sentry/SentryLevel;)V
	public abstract fun setSpanContext (Ljava/lang/Throwable;Lio/sentry/ISpan;Ljava/lang/String;)V
	public abstract fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun setTransaction (Ljava/lang/String;)V
	public abstract fun setUser (Lio/sentry/protocol/User;)V
	public abstract fun startSession ()V
	public fun startTransaction (Lio/sentry/TransactionContext;)Lio/sentry/ITransaction;
	public fun startTransaction (Lio/sentry/TransactionContext;Lio/sentry/CustomSamplingContext;)Lio/sentry/ITransaction;
	public abstract fun startTransaction (Lio/sentry/TransactionContext;Lio/sentry/CustomSamplingContext;Z)Lio/sentry/ITransaction;
	public abstract fun startTransaction (Lio/sentry/TransactionContext;Lio/sentry/TransactionOptions;)Lio/sentry/ITransaction;
	public fun startTransaction (Lio/sentry/TransactionContext;Z)Lio/sentry/ITransaction;
	public fun startTransaction (Ljava/lang/String;Ljava/lang/String;)Lio/sentry/ITransaction;
	public fun startTransaction (Ljava/lang/String;Ljava/lang/String;Lio/sentry/CustomSamplingContext;)Lio/sentry/ITransaction;
	public fun startTransaction (Ljava/lang/String;Ljava/lang/String;Lio/sentry/CustomSamplingContext;Z)Lio/sentry/ITransaction;
	public fun startTransaction (Ljava/lang/String;Ljava/lang/String;Z)Lio/sentry/ITransaction;
	public abstract fun traceHeaders ()Lio/sentry/SentryTraceHeader;
	public abstract fun withScope (Lio/sentry/ScopeCallback;)V
}

public abstract interface class io/sentry/ILogger {
	public abstract fun isEnabled (Lio/sentry/SentryLevel;)Z
	public abstract fun log (Lio/sentry/SentryLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
	public abstract fun log (Lio/sentry/SentryLevel;Ljava/lang/String;[Ljava/lang/Object;)V
	public abstract fun log (Lio/sentry/SentryLevel;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
}

public abstract interface class io/sentry/IMemoryCollector {
	public abstract fun collect ()Lio/sentry/MemoryCollectionData;
}

public abstract interface class io/sentry/IScopeObserver {
	public abstract fun addBreadcrumb (Lio/sentry/Breadcrumb;)V
	public abstract fun removeExtra (Ljava/lang/String;)V
	public abstract fun removeTag (Ljava/lang/String;)V
	public abstract fun setExtra (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun setUser (Lio/sentry/protocol/User;)V
}

public abstract interface class io/sentry/ISentryClient {
	public fun captureEnvelope (Lio/sentry/SentryEnvelope;)Lio/sentry/protocol/SentryId;
	public abstract fun captureEnvelope (Lio/sentry/SentryEnvelope;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureEvent (Lio/sentry/SentryEvent;)Lio/sentry/protocol/SentryId;
	public fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/Scope;)Lio/sentry/protocol/SentryId;
	public abstract fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/Scope;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureException (Ljava/lang/Throwable;)Lio/sentry/protocol/SentryId;
	public fun captureException (Ljava/lang/Throwable;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureException (Ljava/lang/Throwable;Lio/sentry/Scope;)Lio/sentry/protocol/SentryId;
	public fun captureException (Ljava/lang/Throwable;Lio/sentry/Scope;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureMessage (Ljava/lang/String;Lio/sentry/SentryLevel;)Lio/sentry/protocol/SentryId;
	public fun captureMessage (Ljava/lang/String;Lio/sentry/SentryLevel;Lio/sentry/Scope;)Lio/sentry/protocol/SentryId;
	public fun captureSession (Lio/sentry/Session;)V
	public abstract fun captureSession (Lio/sentry/Session;Lio/sentry/Hint;)V
	public fun captureTransaction (Lio/sentry/protocol/SentryTransaction;)Lio/sentry/protocol/SentryId;
	public fun captureTransaction (Lio/sentry/protocol/SentryTransaction;Lio/sentry/Scope;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureTransaction (Lio/sentry/protocol/SentryTransaction;Lio/sentry/TraceContext;)Lio/sentry/protocol/SentryId;
	public fun captureTransaction (Lio/sentry/protocol/SentryTransaction;Lio/sentry/TraceContext;Lio/sentry/Scope;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public abstract fun captureTransaction (Lio/sentry/protocol/SentryTransaction;Lio/sentry/TraceContext;Lio/sentry/Scope;Lio/sentry/Hint;Lio/sentry/ProfilingTraceData;)Lio/sentry/protocol/SentryId;
	public abstract fun captureUserFeedback (Lio/sentry/UserFeedback;)V
	public abstract fun close ()V
	public abstract fun flush (J)V
	public abstract fun isEnabled ()Z
}

public abstract interface class io/sentry/ISentryExecutorService {
	public abstract fun close (J)V
	public abstract fun schedule (Ljava/lang/Runnable;J)Ljava/util/concurrent/Future;
	public abstract fun submit (Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
	public abstract fun submit (Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
}

public abstract interface class io/sentry/ISerializer {
	public abstract fun deserialize (Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;
	public abstract fun deserializeEnvelope (Ljava/io/InputStream;)Lio/sentry/SentryEnvelope;
	public abstract fun serialize (Lio/sentry/SentryEnvelope;Ljava/io/OutputStream;)V
	public abstract fun serialize (Ljava/lang/Object;Ljava/io/Writer;)V
	public abstract fun serialize (Ljava/util/Map;)Ljava/lang/String;
}

public abstract interface class io/sentry/ISpan {
	public abstract fun finish ()V
	public abstract fun finish (Lio/sentry/SpanStatus;)V
	public abstract fun finish (Lio/sentry/SpanStatus;Lio/sentry/SentryDate;)V
	public abstract fun getData (Ljava/lang/String;)Ljava/lang/Object;
	public abstract fun getDescription ()Ljava/lang/String;
	public abstract fun getOperation ()Ljava/lang/String;
	public abstract fun getSpanContext ()Lio/sentry/SpanContext;
	public abstract fun getStatus ()Lio/sentry/SpanStatus;
	public abstract fun getTag (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun getThrowable ()Ljava/lang/Throwable;
	public abstract fun isFinished ()Z
	public abstract fun isNoOp ()Z
	public abstract fun setData (Ljava/lang/String;Ljava/lang/Object;)V
	public abstract fun setDescription (Ljava/lang/String;)V
	public abstract fun setMeasurement (Ljava/lang/String;Ljava/lang/Number;)V
	public abstract fun setMeasurement (Ljava/lang/String;Ljava/lang/Number;Lio/sentry/MeasurementUnit;)V
	public abstract fun setOperation (Ljava/lang/String;)V
	public abstract fun setStatus (Lio/sentry/SpanStatus;)V
	public abstract fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun setThrowable (Ljava/lang/Throwable;)V
	public abstract fun startChild (Ljava/lang/String;)Lio/sentry/ISpan;
	public abstract fun startChild (Ljava/lang/String;Ljava/lang/String;)Lio/sentry/ISpan;
	public abstract fun startChild (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SentryDate;Lio/sentry/Instrumenter;)Lio/sentry/ISpan;
	public abstract fun startChild (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SentryDate;Lio/sentry/Instrumenter;Lio/sentry/SpanOptions;)Lio/sentry/ISpan;
	public abstract fun startChild (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SpanOptions;)Lio/sentry/ISpan;
	public abstract fun toBaggageHeader (Ljava/util/List;)Lio/sentry/BaggageHeader;
	public abstract fun toSentryTrace ()Lio/sentry/SentryTraceHeader;
	public abstract fun traceContext ()Lio/sentry/TraceContext;
	public abstract fun updateEndDate (Lio/sentry/SentryDate;)Z
}

public abstract interface class io/sentry/ITransaction : io/sentry/ISpan {
	public abstract fun getContexts ()Lio/sentry/protocol/Contexts;
	public abstract fun getEventId ()Lio/sentry/protocol/SentryId;
	public abstract fun getLatestActiveSpan ()Lio/sentry/Span;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getSamplingDecision ()Lio/sentry/TracesSamplingDecision;
	public abstract fun getSpans ()Ljava/util/List;
	public abstract fun getTransactionNameSource ()Lio/sentry/protocol/TransactionNameSource;
	public abstract fun isProfileSampled ()Ljava/lang/Boolean;
	public abstract fun isSampled ()Ljava/lang/Boolean;
	public abstract fun scheduleFinish ()V
	public abstract fun setContext (Ljava/lang/String;Ljava/lang/Object;)V
	public abstract fun setName (Ljava/lang/String;)V
	public abstract fun setName (Ljava/lang/String;Lio/sentry/protocol/TransactionNameSource;)V
}

public abstract interface class io/sentry/ITransactionProfiler {
	public abstract fun onTransactionFinish (Lio/sentry/ITransaction;Ljava/util/List;)Lio/sentry/ProfilingTraceData;
	public abstract fun onTransactionStart (Lio/sentry/ITransaction;)V
}

public abstract interface class io/sentry/ITransportFactory {
	public abstract fun create (Lio/sentry/SentryOptions;Lio/sentry/RequestDetails;)Lio/sentry/transport/ITransport;
}

public final class io/sentry/Instrumenter : java/lang/Enum {
	public static final field OTEL Lio/sentry/Instrumenter;
	public static final field SENTRY Lio/sentry/Instrumenter;
	public static fun valueOf (Ljava/lang/String;)Lio/sentry/Instrumenter;
	public static fun values ()[Lio/sentry/Instrumenter;
}

public abstract interface class io/sentry/Integration : io/sentry/IntegrationName {
	public abstract fun register (Lio/sentry/IHub;Lio/sentry/SentryOptions;)V
}

public abstract interface class io/sentry/IntegrationName {
	public fun addIntegrationToSdkVersion ()V
	public fun getIntegrationName ()Ljava/lang/String;
}

public final class io/sentry/IpAddressUtils {
	public static fun isDefault (Ljava/lang/String;)Z
}

public final class io/sentry/JavaMemoryCollector : io/sentry/ICollector {
	public fun <init> ()V
	public fun collect (Lio/sentry/PerformanceCollectionData;)V
	public fun setup ()V
}

public abstract interface class io/sentry/JsonDeserializer {
	public abstract fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/JsonObjectDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;)Ljava/lang/Object;
}

public final class io/sentry/JsonObjectReader : io/sentry/vendor/gson/stream/JsonReader {
	public fun <init> (Ljava/io/Reader;)V
	public fun nextBooleanOrNull ()Ljava/lang/Boolean;
	public fun nextDateOrNull (Lio/sentry/ILogger;)Ljava/util/Date;
	public fun nextDoubleOrNull ()Ljava/lang/Double;
	public fun nextFloat ()Ljava/lang/Float;
	public fun nextFloatOrNull ()Ljava/lang/Float;
	public fun nextIntegerOrNull ()Ljava/lang/Integer;
	public fun nextList (Lio/sentry/ILogger;Lio/sentry/JsonDeserializer;)Ljava/util/List;
	public fun nextLongOrNull ()Ljava/lang/Long;
	public fun nextMapOrNull (Lio/sentry/ILogger;Lio/sentry/JsonDeserializer;)Ljava/util/Map;
	public fun nextObjectOrNull ()Ljava/lang/Object;
	public fun nextOrNull (Lio/sentry/ILogger;Lio/sentry/JsonDeserializer;)Ljava/lang/Object;
	public fun nextStringOrNull ()Ljava/lang/String;
	public fun nextTimeZoneOrNull (Lio/sentry/ILogger;)Ljava/util/TimeZone;
	public fun nextUnknown (Lio/sentry/ILogger;Ljava/util/Map;Ljava/lang/String;)V
}

public final class io/sentry/JsonObjectSerializer {
	public static final field OBJECT_PLACEHOLDER Ljava/lang/String;
	public final field jsonReflectionObjectSerializer Lio/sentry/JsonReflectionObjectSerializer;
	public fun <init> (I)V
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;Ljava/lang/Object;)V
}

public final class io/sentry/JsonObjectWriter : io/sentry/vendor/gson/stream/JsonWriter {
	public fun <init> (Ljava/io/Writer;I)V
	public fun name (Ljava/lang/String;)Lio/sentry/JsonObjectWriter;
	public synthetic fun name (Ljava/lang/String;)Lio/sentry/vendor/gson/stream/JsonWriter;
	public fun value (Lio/sentry/ILogger;Ljava/lang/Object;)Lio/sentry/JsonObjectWriter;
}

public final class io/sentry/JsonReflectionObjectSerializer {
	public fun serialize (Ljava/lang/Object;Lio/sentry/ILogger;)Ljava/lang/Object;
	public fun serializeObject (Ljava/lang/Object;Lio/sentry/ILogger;)Ljava/util/Map;
}

public abstract interface class io/sentry/JsonSerializable {
	public abstract fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
}

public final class io/sentry/JsonSerializer : io/sentry/ISerializer {
	public fun <init> (Lio/sentry/SentryOptions;)V
	public fun deserialize (Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;
	public fun deserializeEnvelope (Ljava/io/InputStream;)Lio/sentry/SentryEnvelope;
	public fun serialize (Lio/sentry/SentryEnvelope;Ljava/io/OutputStream;)V
	public fun serialize (Ljava/lang/Object;Ljava/io/Writer;)V
	public fun serialize (Ljava/util/Map;)Ljava/lang/String;
}

public abstract interface class io/sentry/JsonUnknown {
	public abstract fun getUnknown ()Ljava/util/Map;
	public abstract fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/MainEventProcessor : io/sentry/EventProcessor, java/io/Closeable {
	public fun <init> (Lio/sentry/SentryOptions;)V
	public fun close ()V
	public fun process (Lio/sentry/SentryEvent;Lio/sentry/Hint;)Lio/sentry/SentryEvent;
	public fun process (Lio/sentry/protocol/SentryTransaction;Lio/sentry/Hint;)Lio/sentry/protocol/SentryTransaction;
}

public abstract interface class io/sentry/MeasurementUnit {
	public static final field NONE Ljava/lang/String;
	public fun apiName ()Ljava/lang/String;
	public abstract fun name ()Ljava/lang/String;
}

public final class io/sentry/MeasurementUnit$Custom : io/sentry/MeasurementUnit {
	public fun <init> (Ljava/lang/String;)V
	public fun name ()Ljava/lang/String;
}

public final class io/sentry/MeasurementUnit$Duration : java/lang/Enum, io/sentry/MeasurementUnit {
	public static final field DAY Lio/sentry/MeasurementUnit$Duration;
	public static final field HOUR Lio/sentry/MeasurementUnit$Duration;
	public static final field MICROSECOND Lio/sentry/MeasurementUnit$Duration;
	public static final field MILLISECOND Lio/sentry/MeasurementUnit$Duration;
	public static final field MINUTE Lio/sentry/MeasurementUnit$Duration;
	public static final field NANOSECOND Lio/sentry/MeasurementUnit$Duration;
	public static final field SECOND Lio/sentry/MeasurementUnit$Duration;
	public static final field WEEK Lio/sentry/MeasurementUnit$Duration;
	public static fun valueOf (Ljava/lang/String;)Lio/sentry/MeasurementUnit$Duration;
	public static fun values ()[Lio/sentry/MeasurementUnit$Duration;
}

public final class io/sentry/MeasurementUnit$Fraction : java/lang/Enum, io/sentry/MeasurementUnit {
	public static final field PERCENT Lio/sentry/MeasurementUnit$Fraction;
	public static final field RATIO Lio/sentry/MeasurementUnit$Fraction;
	public static fun valueOf (Ljava/lang/String;)Lio/sentry/MeasurementUnit$Fraction;
	public static fun values ()[Lio/sentry/MeasurementUnit$Fraction;
}

public final class io/sentry/MeasurementUnit$Information : java/lang/Enum, io/sentry/MeasurementUnit {
	public static final field BIT Lio/sentry/MeasurementUnit$Information;
	public static final field BYTE Lio/sentry/MeasurementUnit$Information;
	public static final field EXABYTE Lio/sentry/MeasurementUnit$Information;
	public static final field EXBIBYTE Lio/sentry/MeasurementUnit$Information;
	public static final field GIBIBYTE Lio/sentry/MeasurementUnit$Information;
	public static final field GIGABYTE Lio/sentry/MeasurementUnit$Information;
	public static final field KIBIBYTE Lio/sentry/MeasurementUnit$Information;
	public static final field KILOBYTE Lio/sentry/MeasurementUnit$Information;
	public static final field MEBIBYTE Lio/sentry/MeasurementUnit$Information;
	public static final field MEGABYTE Lio/sentry/MeasurementUnit$Information;
	public static final field PEBIBYTE Lio/sentry/MeasurementUnit$Information;
	public static final field PETABYTE Lio/sentry/MeasurementUnit$Information;
	public static final field TEBIBYTE Lio/sentry/MeasurementUnit$Information;
	public static final field TERABYTE Lio/sentry/MeasurementUnit$Information;
	public static fun valueOf (Ljava/lang/String;)Lio/sentry/MeasurementUnit$Information;
	public static fun values ()[Lio/sentry/MeasurementUnit$Information;
}

public final class io/sentry/MemoryCollectionData {
	public fun <init> (JJ)V
	public fun <init> (JJJ)V
	public fun getTimestampMillis ()J
	public fun getUsedHeapMemory ()J
	public fun getUsedNativeMemory ()J
}

public final class io/sentry/NoOpEnvelopeReader : io/sentry/IEnvelopeReader {
	public static fun getInstance ()Lio/sentry/NoOpEnvelopeReader;
	public fun read (Ljava/io/InputStream;)Lio/sentry/SentryEnvelope;
}

public final class io/sentry/NoOpHub : io/sentry/IHub {
	public fun addBreadcrumb (Lio/sentry/Breadcrumb;Lio/sentry/Hint;)V
	public fun bindClient (Lio/sentry/ISentryClient;)V
	public fun captureEnvelope (Lio/sentry/SentryEnvelope;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/Hint;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public fun captureException (Ljava/lang/Throwable;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureException (Ljava/lang/Throwable;Lio/sentry/Hint;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public fun captureMessage (Ljava/lang/String;Lio/sentry/SentryLevel;)Lio/sentry/protocol/SentryId;
	public fun captureMessage (Ljava/lang/String;Lio/sentry/SentryLevel;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public fun captureTransaction (Lio/sentry/protocol/SentryTransaction;Lio/sentry/TraceContext;Lio/sentry/Hint;Lio/sentry/ProfilingTraceData;)Lio/sentry/protocol/SentryId;
	public fun captureUserFeedback (Lio/sentry/UserFeedback;)V
	public fun clearBreadcrumbs ()V
	public fun clone ()Lio/sentry/IHub;
	public synthetic fun clone ()Ljava/lang/Object;
	public fun close ()V
	public fun configureScope (Lio/sentry/ScopeCallback;)V
	public fun endSession ()V
	public fun flush (J)V
	public static fun getInstance ()Lio/sentry/NoOpHub;
	public fun getLastEventId ()Lio/sentry/protocol/SentryId;
	public fun getOptions ()Lio/sentry/SentryOptions;
	public fun getSpan ()Lio/sentry/ISpan;
	public fun isCrashedLastRun ()Ljava/lang/Boolean;
	public fun isEnabled ()Z
	public fun popScope ()V
	public fun pushScope ()V
	public fun removeExtra (Ljava/lang/String;)V
	public fun removeTag (Ljava/lang/String;)V
	public fun reportFullyDisplayed ()V
	public fun setExtra (Ljava/lang/String;Ljava/lang/String;)V
	public fun setFingerprint (Ljava/util/List;)V
	public fun setLevel (Lio/sentry/SentryLevel;)V
	public fun setSpanContext (Ljava/lang/Throwable;Lio/sentry/ISpan;Ljava/lang/String;)V
	public fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public fun setTransaction (Ljava/lang/String;)V
	public fun setUser (Lio/sentry/protocol/User;)V
	public fun startSession ()V
	public fun startTransaction (Lio/sentry/TransactionContext;)Lio/sentry/ITransaction;
	public fun startTransaction (Lio/sentry/TransactionContext;Lio/sentry/CustomSamplingContext;Z)Lio/sentry/ITransaction;
	public fun startTransaction (Lio/sentry/TransactionContext;Lio/sentry/TransactionOptions;)Lio/sentry/ITransaction;
	public fun traceHeaders ()Lio/sentry/SentryTraceHeader;
	public fun withScope (Lio/sentry/ScopeCallback;)V
}

public final class io/sentry/NoOpLogger : io/sentry/ILogger {
	public static fun getInstance ()Lio/sentry/NoOpLogger;
	public fun isEnabled (Lio/sentry/SentryLevel;)Z
	public fun log (Lio/sentry/SentryLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun log (Lio/sentry/SentryLevel;Ljava/lang/String;[Ljava/lang/Object;)V
	public fun log (Lio/sentry/SentryLevel;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
}

public final class io/sentry/NoOpSpan : io/sentry/ISpan {
	public fun finish ()V
	public fun finish (Lio/sentry/SpanStatus;)V
	public fun finish (Lio/sentry/SpanStatus;Lio/sentry/SentryDate;)V
	public fun getData (Ljava/lang/String;)Ljava/lang/Object;
	public fun getDescription ()Ljava/lang/String;
	public static fun getInstance ()Lio/sentry/NoOpSpan;
	public fun getOperation ()Ljava/lang/String;
	public fun getSpanContext ()Lio/sentry/SpanContext;
	public fun getStatus ()Lio/sentry/SpanStatus;
	public fun getTag (Ljava/lang/String;)Ljava/lang/String;
	public fun getThrowable ()Ljava/lang/Throwable;
	public fun isFinished ()Z
	public fun isNoOp ()Z
	public fun setData (Ljava/lang/String;Ljava/lang/Object;)V
	public fun setDescription (Ljava/lang/String;)V
	public fun setMeasurement (Ljava/lang/String;Ljava/lang/Number;)V
	public fun setMeasurement (Ljava/lang/String;Ljava/lang/Number;Lio/sentry/MeasurementUnit;)V
	public fun setOperation (Ljava/lang/String;)V
	public fun setStatus (Lio/sentry/SpanStatus;)V
	public fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public fun setThrowable (Ljava/lang/Throwable;)V
	public fun startChild (Ljava/lang/String;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SentryDate;Lio/sentry/Instrumenter;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SentryDate;Lio/sentry/Instrumenter;Lio/sentry/SpanOptions;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SpanOptions;)Lio/sentry/ISpan;
	public fun toBaggageHeader (Ljava/util/List;)Lio/sentry/BaggageHeader;
	public fun toSentryTrace ()Lio/sentry/SentryTraceHeader;
	public fun traceContext ()Lio/sentry/TraceContext;
	public fun updateEndDate (Lio/sentry/SentryDate;)Z
}

public final class io/sentry/NoOpTransaction : io/sentry/ITransaction {
	public fun finish ()V
	public fun finish (Lio/sentry/SpanStatus;)V
	public fun finish (Lio/sentry/SpanStatus;Lio/sentry/SentryDate;)V
	public fun getContexts ()Lio/sentry/protocol/Contexts;
	public fun getData (Ljava/lang/String;)Ljava/lang/Object;
	public fun getDescription ()Ljava/lang/String;
	public fun getEventId ()Lio/sentry/protocol/SentryId;
	public static fun getInstance ()Lio/sentry/NoOpTransaction;
	public fun getLatestActiveSpan ()Lio/sentry/Span;
	public fun getName ()Ljava/lang/String;
	public fun getOperation ()Ljava/lang/String;
	public fun getSamplingDecision ()Lio/sentry/TracesSamplingDecision;
	public fun getSpanContext ()Lio/sentry/SpanContext;
	public fun getSpans ()Ljava/util/List;
	public fun getStatus ()Lio/sentry/SpanStatus;
	public fun getTag (Ljava/lang/String;)Ljava/lang/String;
	public fun getThrowable ()Ljava/lang/Throwable;
	public fun getTransactionNameSource ()Lio/sentry/protocol/TransactionNameSource;
	public fun isFinished ()Z
	public fun isNoOp ()Z
	public fun isProfileSampled ()Ljava/lang/Boolean;
	public fun isSampled ()Ljava/lang/Boolean;
	public fun scheduleFinish ()V
	public fun setContext (Ljava/lang/String;Ljava/lang/Object;)V
	public fun setData (Ljava/lang/String;Ljava/lang/Object;)V
	public fun setDescription (Ljava/lang/String;)V
	public fun setMeasurement (Ljava/lang/String;Ljava/lang/Number;)V
	public fun setMeasurement (Ljava/lang/String;Ljava/lang/Number;Lio/sentry/MeasurementUnit;)V
	public fun setName (Ljava/lang/String;)V
	public fun setName (Ljava/lang/String;Lio/sentry/protocol/TransactionNameSource;)V
	public fun setOperation (Ljava/lang/String;)V
	public fun setStatus (Lio/sentry/SpanStatus;)V
	public fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public fun setThrowable (Ljava/lang/Throwable;)V
	public fun startChild (Ljava/lang/String;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SentryDate;Lio/sentry/Instrumenter;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SentryDate;Lio/sentry/Instrumenter;Lio/sentry/SpanOptions;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SpanOptions;)Lio/sentry/ISpan;
	public fun toBaggageHeader (Ljava/util/List;)Lio/sentry/BaggageHeader;
	public fun toSentryTrace ()Lio/sentry/SentryTraceHeader;
	public fun traceContext ()Lio/sentry/TraceContext;
	public fun updateEndDate (Lio/sentry/SentryDate;)Z
}

public final class io/sentry/NoOpTransactionPerformanceCollector : io/sentry/TransactionPerformanceCollector {
	public static fun getInstance ()Lio/sentry/NoOpTransactionPerformanceCollector;
	public fun start (Lio/sentry/ITransaction;)V
	public fun stop (Lio/sentry/ITransaction;)Ljava/util/List;
}

public final class io/sentry/NoOpTransactionProfiler : io/sentry/ITransactionProfiler {
	public static fun getInstance ()Lio/sentry/NoOpTransactionProfiler;
	public fun onTransactionFinish (Lio/sentry/ITransaction;Ljava/util/List;)Lio/sentry/ProfilingTraceData;
	public fun onTransactionStart (Lio/sentry/ITransaction;)V
}

public final class io/sentry/NoOpTransportFactory : io/sentry/ITransportFactory {
	public fun create (Lio/sentry/SentryOptions;Lio/sentry/RequestDetails;)Lio/sentry/transport/ITransport;
	public static fun getInstance ()Lio/sentry/NoOpTransportFactory;
}

public final class io/sentry/OptionsContainer {
	public static fun create (Ljava/lang/Class;)Lio/sentry/OptionsContainer;
	public fun createInstance ()Ljava/lang/Object;
}

public final class io/sentry/OutboxSender : io/sentry/IEnvelopeSender {
	public fun <init> (Lio/sentry/IHub;Lio/sentry/IEnvelopeReader;Lio/sentry/ISerializer;Lio/sentry/ILogger;J)V
	public synthetic fun processDirectory (Ljava/io/File;)V
	public fun processEnvelopeFile (Ljava/lang/String;Lio/sentry/Hint;)V
}

public final class io/sentry/PerformanceCollectionData {
	public fun <init> ()V
	public fun addCpuData (Lio/sentry/CpuCollectionData;)V
	public fun addMemoryData (Lio/sentry/MemoryCollectionData;)V
	public fun getCpuData ()Lio/sentry/CpuCollectionData;
	public fun getMemoryData ()Lio/sentry/MemoryCollectionData;
}

public final class io/sentry/ProfilingTraceData : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public static final field TRUNCATION_REASON_BACKGROUNDED Ljava/lang/String;
	public static final field TRUNCATION_REASON_NORMAL Ljava/lang/String;
	public static final field TRUNCATION_REASON_TIMEOUT Ljava/lang/String;
	public fun <init> (Ljava/io/File;Lio/sentry/ITransaction;)V
	public fun <init> (Ljava/io/File;Ljava/util/List;Lio/sentry/ITransaction;Ljava/lang/String;ILjava/lang/String;Ljava/util/concurrent/Callable;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
	public fun getAndroidApiLevel ()I
	public fun getBuildId ()Ljava/lang/String;
	public fun getCpuArchitecture ()Ljava/lang/String;
	public fun getDeviceCpuFrequencies ()Ljava/util/List;
	public fun getDeviceLocale ()Ljava/lang/String;
	public fun getDeviceManufacturer ()Ljava/lang/String;
	public fun getDeviceModel ()Ljava/lang/String;
	public fun getDeviceOsBuildNumber ()Ljava/lang/String;
	public fun getDeviceOsName ()Ljava/lang/String;
	public fun getDeviceOsVersion ()Ljava/lang/String;
	public fun getDevicePhysicalMemoryBytes ()Ljava/lang/String;
	public fun getDurationNs ()Ljava/lang/String;
	public fun getEnvironment ()Ljava/lang/String;
	public fun getMeasurementsMap ()Ljava/util/Map;
	public fun getPlatform ()Ljava/lang/String;
	public fun getProfileId ()Ljava/lang/String;
	public fun getRelease ()Ljava/lang/String;
	public fun getSampledProfile ()Ljava/lang/String;
	public fun getTraceFile ()Ljava/io/File;
	public fun getTraceId ()Ljava/lang/String;
	public fun getTransactionId ()Ljava/lang/String;
	public fun getTransactionName ()Ljava/lang/String;
	public fun getTransactions ()Ljava/util/List;
	public fun getTruncationReason ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun isDeviceIsEmulator ()Z
	public fun readDeviceCpuFrequencies ()V
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setAndroidApiLevel (I)V
	public fun setBuildId (Ljava/lang/String;)V
	public fun setCpuArchitecture (Ljava/lang/String;)V
	public fun setDeviceCpuFrequencies (Ljava/util/List;)V
	public fun setDeviceIsEmulator (Z)V
	public fun setDeviceLocale (Ljava/lang/String;)V
	public fun setDeviceManufacturer (Ljava/lang/String;)V
	public fun setDeviceModel (Ljava/lang/String;)V
	public fun setDeviceOsBuildNumber (Ljava/lang/String;)V
	public fun setDeviceOsVersion (Ljava/lang/String;)V
	public fun setDevicePhysicalMemoryBytes (Ljava/lang/String;)V
	public fun setDurationNs (Ljava/lang/String;)V
	public fun setEnvironment (Ljava/lang/String;)V
	public fun setProfileId (Ljava/lang/String;)V
	public fun setRelease (Ljava/lang/String;)V
	public fun setSampledProfile (Ljava/lang/String;)V
	public fun setTraceId (Ljava/lang/String;)V
	public fun setTransactionId (Ljava/lang/String;)V
	public fun setTransactionName (Ljava/lang/String;)V
	public fun setTransactions (Ljava/util/List;)V
	public fun setTruncationReason (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/ProfilingTraceData$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/ProfilingTraceData;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/ProfilingTraceData$JsonKeys {
	public static final field ANDROID_API_LEVEL Ljava/lang/String;
	public static final field ARCHITECTURE Ljava/lang/String;
	public static final field BUILD_ID Ljava/lang/String;
	public static final field DEVICE_CPU_FREQUENCIES Ljava/lang/String;
	public static final field DEVICE_IS_EMULATOR Ljava/lang/String;
	public static final field DEVICE_LOCALE Ljava/lang/String;
	public static final field DEVICE_MANUFACTURER Ljava/lang/String;
	public static final field DEVICE_MODEL Ljava/lang/String;
	public static final field DEVICE_OS_BUILD_NUMBER Ljava/lang/String;
	public static final field DEVICE_OS_NAME Ljava/lang/String;
	public static final field DEVICE_OS_VERSION Ljava/lang/String;
	public static final field DEVICE_PHYSICAL_MEMORY_BYTES Ljava/lang/String;
	public static final field DURATION_NS Ljava/lang/String;
	public static final field ENVIRONMENT Ljava/lang/String;
	public static final field MEASUREMENTS Ljava/lang/String;
	public static final field PLATFORM Ljava/lang/String;
	public static final field PROFILE_ID Ljava/lang/String;
	public static final field RELEASE Ljava/lang/String;
	public static final field SAMPLED_PROFILE Ljava/lang/String;
	public static final field TRACE_ID Ljava/lang/String;
	public static final field TRANSACTION_ID Ljava/lang/String;
	public static final field TRANSACTION_LIST Ljava/lang/String;
	public static final field TRANSACTION_NAME Ljava/lang/String;
	public static final field TRUNCATION_REASON Ljava/lang/String;
	public static final field VERSION_CODE Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/ProfilingTransactionData : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun <init> (Lio/sentry/ITransaction;Ljava/lang/Long;Ljava/lang/Long;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getId ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getRelativeEndCpuMs ()Ljava/lang/Long;
	public fun getRelativeEndNs ()Ljava/lang/Long;
	public fun getRelativeStartCpuMs ()Ljava/lang/Long;
	public fun getRelativeStartNs ()Ljava/lang/Long;
	public fun getTraceId ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun hashCode ()I
	public fun notifyFinish (Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;)V
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setId (Ljava/lang/String;)V
	public fun setName (Ljava/lang/String;)V
	public fun setRelativeEndNs (Ljava/lang/Long;)V
	public fun setRelativeStartNs (Ljava/lang/Long;)V
	public fun setTraceId (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/ProfilingTransactionData$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/ProfilingTransactionData;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/ProfilingTransactionData$JsonKeys {
	public static final field END_CPU_MS Ljava/lang/String;
	public static final field END_NS Ljava/lang/String;
	public static final field ID Ljava/lang/String;
	public static final field NAME Ljava/lang/String;
	public static final field START_CPU_MS Ljava/lang/String;
	public static final field START_NS Ljava/lang/String;
	public static final field TRACE_ID Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/RequestDetails {
	public fun <init> (Ljava/lang/String;Ljava/util/Map;)V
	public fun getHeaders ()Ljava/util/Map;
	public fun getUrl ()Ljava/net/URL;
}

public final class io/sentry/SamplingContext {
	public fun <init> (Lio/sentry/TransactionContext;Lio/sentry/CustomSamplingContext;)V
	public fun getCustomSamplingContext ()Lio/sentry/CustomSamplingContext;
	public fun getTransactionContext ()Lio/sentry/TransactionContext;
}

public final class io/sentry/Scope {
	public fun <init> (Lio/sentry/SentryOptions;)V
	public fun addAttachment (Lio/sentry/Attachment;)V
	public fun addBreadcrumb (Lio/sentry/Breadcrumb;)V
	public fun addBreadcrumb (Lio/sentry/Breadcrumb;Lio/sentry/Hint;)V
	public fun addEventProcessor (Lio/sentry/EventProcessor;)V
	public fun clear ()V
	public fun clearAttachments ()V
	public fun clearBreadcrumbs ()V
	public fun clearTransaction ()V
	public fun getContexts ()Lio/sentry/protocol/Contexts;
	public fun getLevel ()Lio/sentry/SentryLevel;
	public fun getRequest ()Lio/sentry/protocol/Request;
	public fun getSession ()Lio/sentry/Session;
	public fun getSpan ()Lio/sentry/ISpan;
	public fun getTags ()Ljava/util/Map;
	public fun getTransaction ()Lio/sentry/ITransaction;
	public fun getTransactionName ()Ljava/lang/String;
	public fun getUser ()Lio/sentry/protocol/User;
	public fun removeContexts (Ljava/lang/String;)V
	public fun removeExtra (Ljava/lang/String;)V
	public fun removeTag (Ljava/lang/String;)V
	public fun setContexts (Ljava/lang/String;Ljava/lang/Boolean;)V
	public fun setContexts (Ljava/lang/String;Ljava/lang/Character;)V
	public fun setContexts (Ljava/lang/String;Ljava/lang/Number;)V
	public fun setContexts (Ljava/lang/String;Ljava/lang/Object;)V
	public fun setContexts (Ljava/lang/String;Ljava/lang/String;)V
	public fun setContexts (Ljava/lang/String;Ljava/util/Collection;)V
	public fun setContexts (Ljava/lang/String;[Ljava/lang/Object;)V
	public fun setExtra (Ljava/lang/String;Ljava/lang/String;)V
	public fun setFingerprint (Ljava/util/List;)V
	public fun setLevel (Lio/sentry/SentryLevel;)V
	public fun setRequest (Lio/sentry/protocol/Request;)V
	public fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public fun setTransaction (Lio/sentry/ITransaction;)V
	public fun setTransaction (Ljava/lang/String;)V
	public fun setUser (Lio/sentry/protocol/User;)V
	public fun withTransaction (Lio/sentry/Scope$IWithTransaction;)V
}

public abstract interface class io/sentry/Scope$IWithTransaction {
	public abstract fun accept (Lio/sentry/ITransaction;)V
}

public abstract interface class io/sentry/ScopeCallback {
	public abstract fun run (Lio/sentry/Scope;)V
}

public final class io/sentry/SendCachedEnvelopeFireAndForgetIntegration : io/sentry/Integration {
	public fun <init> (Lio/sentry/SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory;)V
	public final fun register (Lio/sentry/IHub;Lio/sentry/SentryOptions;)V
}

public abstract interface class io/sentry/SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForget {
	public abstract fun send ()V
}

public abstract interface class io/sentry/SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetDirPath {
	public abstract fun getDirPath ()Ljava/lang/String;
}

public abstract interface class io/sentry/SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory {
	public abstract fun create (Lio/sentry/IHub;Lio/sentry/SentryOptions;)Lio/sentry/SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForget;
	public fun hasValidPath (Ljava/lang/String;Lio/sentry/ILogger;)Z
	public fun processDir (Lio/sentry/DirectoryProcessor;Ljava/lang/String;Lio/sentry/ILogger;)Lio/sentry/SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForget;
}

public final class io/sentry/SendFireAndForgetEnvelopeSender : io/sentry/SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory {
	public fun <init> (Lio/sentry/SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetDirPath;)V
	public fun create (Lio/sentry/IHub;Lio/sentry/SentryOptions;)Lio/sentry/SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForget;
}

public final class io/sentry/SendFireAndForgetOutboxSender : io/sentry/SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory {
	public fun <init> (Lio/sentry/SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetDirPath;)V
	public fun create (Lio/sentry/IHub;Lio/sentry/SentryOptions;)Lio/sentry/SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForget;
}

public final class io/sentry/Sentry {
	public static fun addBreadcrumb (Lio/sentry/Breadcrumb;)V
	public static fun addBreadcrumb (Lio/sentry/Breadcrumb;Lio/sentry/Hint;)V
	public static fun addBreadcrumb (Ljava/lang/String;)V
	public static fun addBreadcrumb (Ljava/lang/String;Ljava/lang/String;)V
	public static fun bindClient (Lio/sentry/ISentryClient;)V
	public static fun captureEvent (Lio/sentry/SentryEvent;)Lio/sentry/protocol/SentryId;
	public static fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public static fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/Hint;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public static fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public static fun captureException (Ljava/lang/Throwable;)Lio/sentry/protocol/SentryId;
	public static fun captureException (Ljava/lang/Throwable;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public static fun captureException (Ljava/lang/Throwable;Lio/sentry/Hint;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public static fun captureException (Ljava/lang/Throwable;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public static fun captureMessage (Ljava/lang/String;)Lio/sentry/protocol/SentryId;
	public static fun captureMessage (Ljava/lang/String;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public static fun captureMessage (Ljava/lang/String;Lio/sentry/SentryLevel;)Lio/sentry/protocol/SentryId;
	public static fun captureMessage (Ljava/lang/String;Lio/sentry/SentryLevel;Lio/sentry/ScopeCallback;)Lio/sentry/protocol/SentryId;
	public static fun captureUserFeedback (Lio/sentry/UserFeedback;)V
	public static fun clearBreadcrumbs ()V
	public static fun cloneMainHub ()Lio/sentry/IHub;
	public static fun close ()V
	public static fun configureScope (Lio/sentry/ScopeCallback;)V
	public static fun endSession ()V
	public static fun flush (J)V
	public static fun getCurrentHub ()Lio/sentry/IHub;
	public static fun getLastEventId ()Lio/sentry/protocol/SentryId;
	public static fun getSpan ()Lio/sentry/ISpan;
	public static fun init ()V
	public static fun init (Lio/sentry/OptionsContainer;Lio/sentry/Sentry$OptionsConfiguration;)V
	public static fun init (Lio/sentry/OptionsContainer;Lio/sentry/Sentry$OptionsConfiguration;Z)V
	public static fun init (Lio/sentry/Sentry$OptionsConfiguration;)V
	public static fun init (Lio/sentry/Sentry$OptionsConfiguration;Z)V
	public static fun init (Lio/sentry/SentryOptions;)V
	public static fun init (Ljava/lang/String;)V
	public static fun isCrashedLastRun ()Ljava/lang/Boolean;
	public static fun isEnabled ()Z
	public static fun popScope ()V
	public static fun pushScope ()V
	public static fun removeExtra (Ljava/lang/String;)V
	public static fun removeTag (Ljava/lang/String;)V
	public static fun reportFullDisplayed ()V
	public static fun reportFullyDisplayed ()V
	public static fun setCurrentHub (Lio/sentry/IHub;)V
	public static fun setExtra (Ljava/lang/String;Ljava/lang/String;)V
	public static fun setFingerprint (Ljava/util/List;)V
	public static fun setLevel (Lio/sentry/SentryLevel;)V
	public static fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public static fun setTransaction (Ljava/lang/String;)V
	public static fun setUser (Lio/sentry/protocol/User;)V
	public static fun startSession ()V
	public static fun startTransaction (Lio/sentry/TransactionContext;)Lio/sentry/ITransaction;
	public static fun startTransaction (Lio/sentry/TransactionContext;Lio/sentry/CustomSamplingContext;)Lio/sentry/ITransaction;
	public static fun startTransaction (Lio/sentry/TransactionContext;Lio/sentry/CustomSamplingContext;Z)Lio/sentry/ITransaction;
	public static fun startTransaction (Lio/sentry/TransactionContext;Lio/sentry/TransactionOptions;)Lio/sentry/ITransaction;
	public static fun startTransaction (Lio/sentry/TransactionContext;Z)Lio/sentry/ITransaction;
	public static fun startTransaction (Ljava/lang/String;Ljava/lang/String;)Lio/sentry/ITransaction;
	public static fun startTransaction (Ljava/lang/String;Ljava/lang/String;Lio/sentry/CustomSamplingContext;)Lio/sentry/ITransaction;
	public static fun startTransaction (Ljava/lang/String;Ljava/lang/String;Lio/sentry/CustomSamplingContext;Z)Lio/sentry/ITransaction;
	public static fun startTransaction (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/sentry/ITransaction;
	public static fun startTransaction (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lio/sentry/ITransaction;
	public static fun startTransaction (Ljava/lang/String;Ljava/lang/String;Z)Lio/sentry/ITransaction;
	public static fun traceHeaders ()Lio/sentry/SentryTraceHeader;
	public static fun withScope (Lio/sentry/ScopeCallback;)V
}

public abstract interface class io/sentry/Sentry$OptionsConfiguration {
	public abstract fun configure (Lio/sentry/SentryOptions;)V
}

public final class io/sentry/SentryAutoDateProvider : io/sentry/SentryDateProvider {
	public fun <init> ()V
	public fun now ()Lio/sentry/SentryDate;
}

public abstract class io/sentry/SentryBaseEvent {
	public static final field DEFAULT_PLATFORM Ljava/lang/String;
	protected field throwable Ljava/lang/Throwable;
	protected fun <init> ()V
	protected fun <init> (Lio/sentry/protocol/SentryId;)V
	public fun addBreadcrumb (Lio/sentry/Breadcrumb;)V
	public fun addBreadcrumb (Ljava/lang/String;)V
	public fun getBreadcrumbs ()Ljava/util/List;
	public fun getContexts ()Lio/sentry/protocol/Contexts;
	public fun getDebugMeta ()Lio/sentry/protocol/DebugMeta;
	public fun getDist ()Ljava/lang/String;
	public fun getEnvironment ()Ljava/lang/String;
	public fun getEventId ()Lio/sentry/protocol/SentryId;
	public fun getExtra (Ljava/lang/String;)Ljava/lang/Object;
	public fun getPlatform ()Ljava/lang/String;
	public fun getRelease ()Ljava/lang/String;
	public fun getRequest ()Lio/sentry/protocol/Request;
	public fun getSdk ()Lio/sentry/protocol/SdkVersion;
	public fun getServerName ()Ljava/lang/String;
	public fun getTag (Ljava/lang/String;)Ljava/lang/String;
	public fun getTags ()Ljava/util/Map;
	public fun getThrowable ()Ljava/lang/Throwable;
	public fun getThrowableMechanism ()Ljava/lang/Throwable;
	public fun getUser ()Lio/sentry/protocol/User;
	public fun removeExtra (Ljava/lang/String;)V
	public fun removeTag (Ljava/lang/String;)V
	public fun setBreadcrumbs (Ljava/util/List;)V
	public fun setDebugMeta (Lio/sentry/protocol/DebugMeta;)V
	public fun setDist (Ljava/lang/String;)V
	public fun setEnvironment (Ljava/lang/String;)V
	public fun setEventId (Lio/sentry/protocol/SentryId;)V
	public fun setExtra (Ljava/lang/String;Ljava/lang/Object;)V
	public fun setExtras (Ljava/util/Map;)V
	public fun setPlatform (Ljava/lang/String;)V
	public fun setRelease (Ljava/lang/String;)V
	public fun setRequest (Lio/sentry/protocol/Request;)V
	public fun setSdk (Lio/sentry/protocol/SdkVersion;)V
	public fun setServerName (Ljava/lang/String;)V
	public fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public fun setTags (Ljava/util/Map;)V
	public fun setThrowable (Ljava/lang/Throwable;)V
	public fun setUser (Lio/sentry/protocol/User;)V
}

public final class io/sentry/SentryBaseEvent$Deserializer {
	public fun <init> ()V
	public fun deserializeValue (Lio/sentry/SentryBaseEvent;Ljava/lang/String;Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Z
}

public final class io/sentry/SentryBaseEvent$JsonKeys {
	public static final field BREADCRUMBS Ljava/lang/String;
	public static final field CONTEXTS Ljava/lang/String;
	public static final field DEBUG_META Ljava/lang/String;
	public static final field DIST Ljava/lang/String;
	public static final field ENVIRONMENT Ljava/lang/String;
	public static final field EVENT_ID Ljava/lang/String;
	public static final field EXTRA Ljava/lang/String;
	public static final field PLATFORM Ljava/lang/String;
	public static final field RELEASE Ljava/lang/String;
	public static final field REQUEST Ljava/lang/String;
	public static final field SDK Ljava/lang/String;
	public static final field SERVER_NAME Ljava/lang/String;
	public static final field TAGS Ljava/lang/String;
	public static final field USER Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/SentryBaseEvent$Serializer {
	public fun <init> ()V
	public fun serialize (Lio/sentry/SentryBaseEvent;Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
}

public final class io/sentry/SentryClient : io/sentry/ISentryClient {
	public fun captureEnvelope (Lio/sentry/SentryEnvelope;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureEvent (Lio/sentry/SentryEvent;Lio/sentry/Scope;Lio/sentry/Hint;)Lio/sentry/protocol/SentryId;
	public fun captureSession (Lio/sentry/Session;Lio/sentry/Hint;)V
	public fun captureTransaction (Lio/sentry/protocol/SentryTransaction;Lio/sentry/TraceContext;Lio/sentry/Scope;Lio/sentry/Hint;Lio/sentry/ProfilingTraceData;)Lio/sentry/protocol/SentryId;
	public fun captureUserFeedback (Lio/sentry/UserFeedback;)V
	public fun close ()V
	public fun flush (J)V
	public fun isEnabled ()Z
}

public final class io/sentry/SentryCrashLastRunState {
	public static fun getInstance ()Lio/sentry/SentryCrashLastRunState;
	public fun isCrashedLastRun (Ljava/lang/String;Z)Ljava/lang/Boolean;
	public fun reset ()V
	public fun setCrashedLastRun (Z)V
}

public abstract class io/sentry/SentryDate : java/lang/Comparable {
	public fun <init> ()V
	public fun compareTo (Lio/sentry/SentryDate;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun diff (Lio/sentry/SentryDate;)J
	public final fun isAfter (Lio/sentry/SentryDate;)Z
	public final fun isBefore (Lio/sentry/SentryDate;)Z
	public fun laterDateNanosTimestampByDiff (Lio/sentry/SentryDate;)J
	public abstract fun nanoTimestamp ()J
}

public abstract interface class io/sentry/SentryDateProvider {
	public abstract fun now ()Lio/sentry/SentryDate;
}

public final class io/sentry/SentryEnvelope {
	public fun <init> (Lio/sentry/SentryEnvelopeHeader;Ljava/lang/Iterable;)V
	public fun <init> (Lio/sentry/protocol/SentryId;Lio/sentry/protocol/SdkVersion;Lio/sentry/SentryEnvelopeItem;)V
	public fun <init> (Lio/sentry/protocol/SentryId;Lio/sentry/protocol/SdkVersion;Ljava/lang/Iterable;)V
	public static fun from (Lio/sentry/ISerializer;Lio/sentry/ProfilingTraceData;JLio/sentry/protocol/SdkVersion;)Lio/sentry/SentryEnvelope;
	public static fun from (Lio/sentry/ISerializer;Lio/sentry/SentryBaseEvent;Lio/sentry/protocol/SdkVersion;)Lio/sentry/SentryEnvelope;
	public static fun from (Lio/sentry/ISerializer;Lio/sentry/Session;Lio/sentry/protocol/SdkVersion;)Lio/sentry/SentryEnvelope;
	public fun getHeader ()Lio/sentry/SentryEnvelopeHeader;
	public fun getItems ()Ljava/lang/Iterable;
}

public final class io/sentry/SentryEnvelopeHeader : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun <init> (Lio/sentry/protocol/SentryId;)V
	public fun <init> (Lio/sentry/protocol/SentryId;Lio/sentry/protocol/SdkVersion;)V
	public fun <init> (Lio/sentry/protocol/SentryId;Lio/sentry/protocol/SdkVersion;Lio/sentry/TraceContext;)V
	public fun getEventId ()Lio/sentry/protocol/SentryId;
	public fun getSdkVersion ()Lio/sentry/protocol/SdkVersion;
	public fun getTraceContext ()Lio/sentry/TraceContext;
	public fun getUnknown ()Ljava/util/Map;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/SentryEnvelopeHeader$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/SentryEnvelopeHeader;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/SentryEnvelopeHeader$JsonKeys {
	public static final field EVENT_ID Ljava/lang/String;
	public static final field SDK Ljava/lang/String;
	public static final field TRACE Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/SentryEnvelopeItem {
	public static fun fromAttachment (Lio/sentry/ISerializer;Lio/sentry/ILogger;Lio/sentry/Attachment;J)Lio/sentry/SentryEnvelopeItem;
	public static fun fromClientReport (Lio/sentry/ISerializer;Lio/sentry/clientreport/ClientReport;)Lio/sentry/SentryEnvelopeItem;
	public static fun fromEvent (Lio/sentry/ISerializer;Lio/sentry/SentryBaseEvent;)Lio/sentry/SentryEnvelopeItem;
	public static fun fromProfilingTrace (Lio/sentry/ProfilingTraceData;JLio/sentry/ISerializer;)Lio/sentry/SentryEnvelopeItem;
	public static fun fromSession (Lio/sentry/ISerializer;Lio/sentry/Session;)Lio/sentry/SentryEnvelopeItem;
	public static fun fromUserFeedback (Lio/sentry/ISerializer;Lio/sentry/UserFeedback;)Lio/sentry/SentryEnvelopeItem;
	public fun getClientReport (Lio/sentry/ISerializer;)Lio/sentry/clientreport/ClientReport;
	public fun getData ()[B
	public fun getEvent (Lio/sentry/ISerializer;)Lio/sentry/SentryEvent;
	public fun getHeader ()Lio/sentry/SentryEnvelopeItemHeader;
	public fun getTransaction (Lio/sentry/ISerializer;)Lio/sentry/protocol/SentryTransaction;
}

public final class io/sentry/SentryEnvelopeItemHeader : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> (Lio/sentry/SentryItemType;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public fun getAttachmentType ()Ljava/lang/String;
	public fun getContentType ()Ljava/lang/String;
	public fun getFileName ()Ljava/lang/String;
	public fun getLength ()I
	public fun getType ()Lio/sentry/SentryItemType;
	public fun getUnknown ()Ljava/util/Map;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/SentryEnvelopeItemHeader$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/SentryEnvelopeItemHeader;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/SentryEnvelopeItemHeader$JsonKeys {
	public static final field ATTACHMENT_TYPE Ljava/lang/String;
	public static final field CONTENT_TYPE Ljava/lang/String;
	public static final field FILENAME Ljava/lang/String;
	public static final field LENGTH Ljava/lang/String;
	public static final field TYPE Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/SentryEvent : io/sentry/SentryBaseEvent, io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Throwable;)V
	public fun <init> (Ljava/util/Date;)V
	public fun getExceptions ()Ljava/util/List;
	public fun getFingerprints ()Ljava/util/List;
	public fun getLevel ()Lio/sentry/SentryLevel;
	public fun getLogger ()Ljava/lang/String;
	public fun getMessage ()Lio/sentry/protocol/Message;
	public fun getModule (Ljava/lang/String;)Ljava/lang/String;
	public fun getThreads ()Ljava/util/List;
	public fun getTimestamp ()Ljava/util/Date;
	public fun getTransaction ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun isCrashed ()Z
	public fun isErrored ()Z
	public fun removeModule (Ljava/lang/String;)V
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setExceptions (Ljava/util/List;)V
	public fun setFingerprints (Ljava/util/List;)V
	public fun setLevel (Lio/sentry/SentryLevel;)V
	public fun setLogger (Ljava/lang/String;)V
	public fun setMessage (Lio/sentry/protocol/Message;)V
	public fun setModule (Ljava/lang/String;Ljava/lang/String;)V
	public fun setModules (Ljava/util/Map;)V
	public fun setThreads (Ljava/util/List;)V
	public fun setTransaction (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/SentryEvent$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/SentryEvent;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/SentryEvent$JsonKeys {
	public static final field EXCEPTION Ljava/lang/String;
	public static final field FINGERPRINT Ljava/lang/String;
	public static final field LEVEL Ljava/lang/String;
	public static final field LOGGER Ljava/lang/String;
	public static final field MESSAGE Ljava/lang/String;
	public static final field MODULES Ljava/lang/String;
	public static final field THREADS Ljava/lang/String;
	public static final field TIMESTAMP Ljava/lang/String;
	public static final field TRANSACTION Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/SentryInstantDate : io/sentry/SentryDate {
	public fun <init> ()V
	public fun <init> (Ljava/time/Instant;)V
	public fun nanoTimestamp ()J
}

public final class io/sentry/SentryInstantDateProvider : io/sentry/SentryDateProvider {
	public fun <init> ()V
	public fun now ()Lio/sentry/SentryDate;
}

public final class io/sentry/SentryIntegrationPackageStorage {
	public fun addIntegration (Ljava/lang/String;)V
	public fun addPackage (Ljava/lang/String;Ljava/lang/String;)V
	public fun clearStorage ()V
	public static fun getInstance ()Lio/sentry/SentryIntegrationPackageStorage;
	public fun getIntegrations ()Ljava/util/Set;
	public fun getPackages ()Ljava/util/Set;
}

public final class io/sentry/SentryItemType : java/lang/Enum, io/sentry/JsonSerializable {
	public static final field Attachment Lio/sentry/SentryItemType;
	public static final field ClientReport Lio/sentry/SentryItemType;
	public static final field Event Lio/sentry/SentryItemType;
	public static final field Profile Lio/sentry/SentryItemType;
	public static final field ReplayEvent Lio/sentry/SentryItemType;
	public static final field ReplayRecording Lio/sentry/SentryItemType;
	public static final field Session Lio/sentry/SentryItemType;
	public static final field Transaction Lio/sentry/SentryItemType;
	public static final field Unknown Lio/sentry/SentryItemType;
	public static final field UserFeedback Lio/sentry/SentryItemType;
	public fun getItemType ()Ljava/lang/String;
	public static fun resolve (Ljava/lang/Object;)Lio/sentry/SentryItemType;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public static fun valueOf (Ljava/lang/String;)Lio/sentry/SentryItemType;
	public static fun valueOfLabel (Ljava/lang/String;)Lio/sentry/SentryItemType;
	public static fun values ()[Lio/sentry/SentryItemType;
}

public final class io/sentry/SentryLevel : java/lang/Enum, io/sentry/JsonSerializable {
	public static final field DEBUG Lio/sentry/SentryLevel;
	public static final field ERROR Lio/sentry/SentryLevel;
	public static final field FATAL Lio/sentry/SentryLevel;
	public static final field INFO Lio/sentry/SentryLevel;
	public static final field WARNING Lio/sentry/SentryLevel;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public static fun valueOf (Ljava/lang/String;)Lio/sentry/SentryLevel;
	public static fun values ()[Lio/sentry/SentryLevel;
}

public final class io/sentry/SentryLongDate : io/sentry/SentryDate {
	public fun <init> (J)V
	public fun nanoTimestamp ()J
}

public final class io/sentry/SentryNanotimeDate : io/sentry/SentryDate {
	public fun <init> ()V
	public fun <init> (Ljava/util/Date;J)V
	public fun compareTo (Lio/sentry/SentryDate;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun diff (Lio/sentry/SentryDate;)J
	public fun laterDateNanosTimestampByDiff (Lio/sentry/SentryDate;)J
	public fun nanoTimestamp ()J
}

public final class io/sentry/SentryNanotimeDateProvider : io/sentry/SentryDateProvider {
	public fun <init> ()V
	public fun now ()Lio/sentry/SentryDate;
}

public class io/sentry/SentryOptions {
	public fun <init> ()V
	public fun addCollector (Lio/sentry/ICollector;)V
	public fun addContextTag (Ljava/lang/String;)V
	public fun addEventProcessor (Lio/sentry/EventProcessor;)V
	public fun addIgnoredExceptionForType (Ljava/lang/Class;)V
	public fun addInAppExclude (Ljava/lang/String;)V
	public fun addInAppInclude (Ljava/lang/String;)V
	public fun addIntegration (Lio/sentry/Integration;)V
	public fun addScopeObserver (Lio/sentry/IScopeObserver;)V
	public fun addTracingOrigin (Ljava/lang/String;)V
	public fun getBeforeBreadcrumb ()Lio/sentry/SentryOptions$BeforeBreadcrumbCallback;
	public fun getBeforeSend ()Lio/sentry/SentryOptions$BeforeSendCallback;
	public fun getBeforeSendTransaction ()Lio/sentry/SentryOptions$BeforeSendTransactionCallback;
	public fun getCacheDirPath ()Ljava/lang/String;
	public fun getClientReportRecorder ()Lio/sentry/clientreport/IClientReportRecorder;
	public fun getCollectors ()Ljava/util/List;
	public fun getConnectionTimeoutMillis ()I
	public fun getContextTags ()Ljava/util/List;
	public fun getDateProvider ()Lio/sentry/SentryDateProvider;
	public fun getDiagnosticLevel ()Lio/sentry/SentryLevel;
	public fun getDist ()Ljava/lang/String;
	public fun getDistinctId ()Ljava/lang/String;
	public fun getDsn ()Ljava/lang/String;
	public fun getEnableTracing ()Ljava/lang/Boolean;
	public fun getEnvelopeDiskCache ()Lio/sentry/cache/IEnvelopeCache;
	public fun getEnvelopeReader ()Lio/sentry/IEnvelopeReader;
	public fun getEnvironment ()Ljava/lang/String;
	public fun getEventProcessors ()Ljava/util/List;
	public fun getExecutorService ()Lio/sentry/ISentryExecutorService;
	public fun getFlushTimeoutMillis ()J
	public fun getFullyDisplayedReporter ()Lio/sentry/FullyDisplayedReporter;
	public fun getGestureTargetLocators ()Ljava/util/List;
	public fun getHostnameVerifier ()Ljavax/net/ssl/HostnameVerifier;
	public fun getIdleTimeout ()Ljava/lang/Long;
	public fun getIgnoredExceptionsForType ()Ljava/util/Set;
	public fun getInAppExcludes ()Ljava/util/List;
	public fun getInAppIncludes ()Ljava/util/List;
	public fun getInstrumenter ()Lio/sentry/Instrumenter;
	public fun getIntegrations ()Ljava/util/List;
	public fun getLogger ()Lio/sentry/ILogger;
	public fun getMainThreadChecker ()Lio/sentry/util/thread/IMainThreadChecker;
	public fun getMaxAttachmentSize ()J
	public fun getMaxBreadcrumbs ()I
	public fun getMaxCacheItems ()I
	public fun getMaxDepth ()I
	public fun getMaxQueueSize ()I
	public fun getMaxRequestBodySize ()Lio/sentry/SentryOptions$RequestSize;
	public fun getMaxSpans ()I
	public fun getMaxTraceFileSize ()J
	public fun getModulesLoader ()Lio/sentry/internal/modules/IModulesLoader;
	public fun getOutboxPath ()Ljava/lang/String;
	public fun getProfilesSampleRate ()Ljava/lang/Double;
	public fun getProfilesSampler ()Lio/sentry/SentryOptions$ProfilesSamplerCallback;
	public fun getProfilingTracesDirPath ()Ljava/lang/String;
	public fun getProguardUuid ()Ljava/lang/String;
	public fun getProxy ()Lio/sentry/SentryOptions$Proxy;
	public fun getReadTimeoutMillis ()I
	public fun getRelease ()Ljava/lang/String;
	public fun getSampleRate ()Ljava/lang/Double;
	public fun getSdkVersion ()Lio/sentry/protocol/SdkVersion;
	public fun getSentryClientName ()Ljava/lang/String;
	public fun getSerializer ()Lio/sentry/ISerializer;
	public fun getServerName ()Ljava/lang/String;
	public fun getSessionTrackingIntervalMillis ()J
	public fun getShutdownTimeout ()J
	public fun getShutdownTimeoutMillis ()J
	public fun getSslSocketFactory ()Ljavax/net/ssl/SSLSocketFactory;
	public fun getTags ()Ljava/util/Map;
	public fun getTracePropagationTargets ()Ljava/util/List;
	public fun getTracesSampleRate ()Ljava/lang/Double;
	public fun getTracesSampler ()Lio/sentry/SentryOptions$TracesSamplerCallback;
	public fun getTracingOrigins ()Ljava/util/List;
	public fun getTransactionPerformanceCollector ()Lio/sentry/TransactionPerformanceCollector;
	public fun getTransactionProfiler ()Lio/sentry/ITransactionProfiler;
	public fun getTransportFactory ()Lio/sentry/ITransportFactory;
	public fun getTransportGate ()Lio/sentry/transport/ITransportGate;
	public fun isAttachServerName ()Z
	public fun isAttachStacktrace ()Z
	public fun isAttachThreads ()Z
	public fun isDebug ()Z
	public fun isEnableAutoSessionTracking ()Z
	public fun isEnableDeduplication ()Z
	public fun isEnableExternalConfiguration ()Z
	public fun isEnableNdk ()Z
	public fun isEnableScopeSync ()Z
	public fun isEnableShutdownHook ()Z
	public fun isEnableTimeToFullDisplayTracing ()Z
	public fun isEnableUncaughtExceptionHandler ()Z
	public fun isEnableUserInteractionBreadcrumbs ()Z
	public fun isEnableUserInteractionTracing ()Z
	public fun isPrintUncaughtStackTrace ()Z
	public fun isProfilingEnabled ()Z
	public fun isSendClientReports ()Z
	public fun isSendDefaultPii ()Z
	public fun isTraceOptionsRequests ()Z
	public fun isTraceSampling ()Z
	public fun isTracingEnabled ()Z
	public fun merge (Lio/sentry/ExternalOptions;)V
	public fun setAttachServerName (Z)V
	public fun setAttachStacktrace (Z)V
	public fun setAttachThreads (Z)V
	public fun setBeforeBreadcrumb (Lio/sentry/SentryOptions$BeforeBreadcrumbCallback;)V
	public fun setBeforeSend (Lio/sentry/SentryOptions$BeforeSendCallback;)V
	public fun setBeforeSendTransaction (Lio/sentry/SentryOptions$BeforeSendTransactionCallback;)V
	public fun setCacheDirPath (Ljava/lang/String;)V
	public fun setConnectionTimeoutMillis (I)V
	public fun setDateProvider (Lio/sentry/SentryDateProvider;)V
	public fun setDebug (Z)V
	public fun setDiagnosticLevel (Lio/sentry/SentryLevel;)V
	public fun setDist (Ljava/lang/String;)V
	public fun setDistinctId (Ljava/lang/String;)V
	public fun setDsn (Ljava/lang/String;)V
	public fun setEnableAutoSessionTracking (Z)V
	public fun setEnableDeduplication (Z)V
	public fun setEnableExternalConfiguration (Z)V
	public fun setEnableNdk (Z)V
	public fun setEnableScopeSync (Z)V
	public fun setEnableShutdownHook (Z)V
	public fun setEnableTimeToFullDisplayTracing (Z)V
	public fun setEnableTracing (Ljava/lang/Boolean;)V
	public fun setEnableUncaughtExceptionHandler (Z)V
	public fun setEnableUserInteractionBreadcrumbs (Z)V
	public fun setEnableUserInteractionTracing (Z)V
	public fun setEnvelopeDiskCache (Lio/sentry/cache/IEnvelopeCache;)V
	public fun setEnvelopeReader (Lio/sentry/IEnvelopeReader;)V
	public fun setEnvironment (Ljava/lang/String;)V
	public fun setExecutorService (Lio/sentry/ISentryExecutorService;)V
	public fun setFlushTimeoutMillis (J)V
	public fun setGestureTargetLocators (Ljava/util/List;)V
	public fun setHostnameVerifier (Ljavax/net/ssl/HostnameVerifier;)V
	public fun setIdleTimeout (Ljava/lang/Long;)V
	public fun setInstrumenter (Lio/sentry/Instrumenter;)V
	public fun setLogger (Lio/sentry/ILogger;)V
	public fun setMainThreadChecker (Lio/sentry/util/thread/IMainThreadChecker;)V
	public fun setMaxAttachmentSize (J)V
	public fun setMaxBreadcrumbs (I)V
	public fun setMaxCacheItems (I)V
	public fun setMaxDepth (I)V
	public fun setMaxQueueSize (I)V
	public fun setMaxRequestBodySize (Lio/sentry/SentryOptions$RequestSize;)V
	public fun setMaxSpans (I)V
	public fun setMaxTraceFileSize (J)V
	public fun setModulesLoader (Lio/sentry/internal/modules/IModulesLoader;)V
	public fun setPrintUncaughtStackTrace (Z)V
	public fun setProfilesSampleRate (Ljava/lang/Double;)V
	public fun setProfilesSampler (Lio/sentry/SentryOptions$ProfilesSamplerCallback;)V
	public fun setProfilingEnabled (Z)V
	public fun setProguardUuid (Ljava/lang/String;)V
	public fun setProxy (Lio/sentry/SentryOptions$Proxy;)V
	public fun setReadTimeoutMillis (I)V
	public fun setRelease (Ljava/lang/String;)V
	public fun setSampleRate (Ljava/lang/Double;)V
	public fun setSdkVersion (Lio/sentry/protocol/SdkVersion;)V
	public fun setSendClientReports (Z)V
	public fun setSendDefaultPii (Z)V
	public fun setSentryClientName (Ljava/lang/String;)V
	public fun setSerializer (Lio/sentry/ISerializer;)V
	public fun setServerName (Ljava/lang/String;)V
	public fun setSessionTrackingIntervalMillis (J)V
	public fun setShutdownTimeout (J)V
	public fun setShutdownTimeoutMillis (J)V
	public fun setSslSocketFactory (Ljavax/net/ssl/SSLSocketFactory;)V
	public fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public fun setTraceOptionsRequests (Z)V
	public fun setTracePropagationTargets (Ljava/util/List;)V
	public fun setTraceSampling (Z)V
	public fun setTracesSampleRate (Ljava/lang/Double;)V
	public fun setTracesSampler (Lio/sentry/SentryOptions$TracesSamplerCallback;)V
	public fun setTracingOrigins (Ljava/util/List;)V
	public fun setTransactionPerformanceCollector (Lio/sentry/TransactionPerformanceCollector;)V
	public fun setTransactionProfiler (Lio/sentry/ITransactionProfiler;)V
	public fun setTransportFactory (Lio/sentry/ITransportFactory;)V
	public fun setTransportGate (Lio/sentry/transport/ITransportGate;)V
}

public abstract interface class io/sentry/SentryOptions$BeforeBreadcrumbCallback {
	public abstract fun execute (Lio/sentry/Breadcrumb;Lio/sentry/Hint;)Lio/sentry/Breadcrumb;
}

public abstract interface class io/sentry/SentryOptions$BeforeSendCallback {
	public abstract fun execute (Lio/sentry/SentryEvent;Lio/sentry/Hint;)Lio/sentry/SentryEvent;
}

public abstract interface class io/sentry/SentryOptions$BeforeSendTransactionCallback {
	public abstract fun execute (Lio/sentry/protocol/SentryTransaction;Lio/sentry/Hint;)Lio/sentry/protocol/SentryTransaction;
}

public abstract interface class io/sentry/SentryOptions$ProfilesSamplerCallback {
	public abstract fun sample (Lio/sentry/SamplingContext;)Ljava/lang/Double;
}

public final class io/sentry/SentryOptions$Proxy {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public fun getHost ()Ljava/lang/String;
	public fun getPass ()Ljava/lang/String;
	public fun getPort ()Ljava/lang/String;
	public fun getUser ()Ljava/lang/String;
	public fun setHost (Ljava/lang/String;)V
	public fun setPass (Ljava/lang/String;)V
	public fun setPort (Ljava/lang/String;)V
	public fun setUser (Ljava/lang/String;)V
}

public final class io/sentry/SentryOptions$RequestSize : java/lang/Enum {
	public static final field ALWAYS Lio/sentry/SentryOptions$RequestSize;
	public static final field MEDIUM Lio/sentry/SentryOptions$RequestSize;
	public static final field NONE Lio/sentry/SentryOptions$RequestSize;
	public static final field SMALL Lio/sentry/SentryOptions$RequestSize;
	public static fun valueOf (Ljava/lang/String;)Lio/sentry/SentryOptions$RequestSize;
	public static fun values ()[Lio/sentry/SentryOptions$RequestSize;
}

public abstract interface class io/sentry/SentryOptions$TracesSamplerCallback {
	public abstract fun sample (Lio/sentry/SamplingContext;)Ljava/lang/Double;
}

public final class io/sentry/SentrySpanStorage {
	public fun get (Ljava/lang/String;)Lio/sentry/ISpan;
	public static fun getInstance ()Lio/sentry/SentrySpanStorage;
	public fun removeAndGet (Ljava/lang/String;)Lio/sentry/ISpan;
	public fun store (Ljava/lang/String;Lio/sentry/ISpan;)V
}

public final class io/sentry/SentryStackTraceFactory {
	public fun <init> (Ljava/util/List;Ljava/util/List;)V
	public fun getInAppCallStack ()Ljava/util/List;
	public fun getStackFrames ([Ljava/lang/StackTraceElement;)Ljava/util/List;
}

public final class io/sentry/SentryTraceHeader {
	public static final field SENTRY_TRACE_HEADER Ljava/lang/String;
	public fun <init> (Lio/sentry/protocol/SentryId;Lio/sentry/SpanId;Ljava/lang/Boolean;)V
	public fun <init> (Ljava/lang/String;)V
	public fun getName ()Ljava/lang/String;
	public fun getSpanId ()Lio/sentry/SpanId;
	public fun getTraceId ()Lio/sentry/protocol/SentryId;
	public fun getValue ()Ljava/lang/String;
	public fun isSampled ()Ljava/lang/Boolean;
}

public final class io/sentry/SentryTracer : io/sentry/ITransaction {
	public fun <init> (Lio/sentry/TransactionContext;Lio/sentry/IHub;)V
	public fun <init> (Lio/sentry/TransactionContext;Lio/sentry/IHub;Lio/sentry/TransactionOptions;Lio/sentry/TransactionFinishedCallback;)V
	public fun finish ()V
	public fun finish (Lio/sentry/SpanStatus;)V
	public fun finish (Lio/sentry/SpanStatus;Lio/sentry/SentryDate;)V
	public fun getChildren ()Ljava/util/List;
	public fun getContexts ()Lio/sentry/protocol/Contexts;
	public fun getData ()Ljava/util/Map;
	public fun getData (Ljava/lang/String;)Ljava/lang/Object;
	public fun getDescription ()Ljava/lang/String;
	public fun getEventId ()Lio/sentry/protocol/SentryId;
	public fun getFinishDate ()Lio/sentry/SentryDate;
	public fun getLatestActiveSpan ()Lio/sentry/Span;
	public fun getName ()Ljava/lang/String;
	public fun getOperation ()Ljava/lang/String;
	public fun getSamplingDecision ()Lio/sentry/TracesSamplingDecision;
	public fun getSpanContext ()Lio/sentry/SpanContext;
	public fun getSpans ()Ljava/util/List;
	public fun getStartDate ()Lio/sentry/SentryDate;
	public fun getStatus ()Lio/sentry/SpanStatus;
	public fun getTag (Ljava/lang/String;)Ljava/lang/String;
	public fun getThrowable ()Ljava/lang/Throwable;
	public fun getTransactionNameSource ()Lio/sentry/protocol/TransactionNameSource;
	public fun isFinished ()Z
	public fun isNoOp ()Z
	public fun isProfileSampled ()Ljava/lang/Boolean;
	public fun isSampled ()Ljava/lang/Boolean;
	public fun scheduleFinish ()V
	public fun setContext (Ljava/lang/String;Ljava/lang/Object;)V
	public fun setData (Ljava/lang/String;Ljava/lang/Object;)V
	public fun setDescription (Ljava/lang/String;)V
	public fun setMeasurement (Ljava/lang/String;Ljava/lang/Number;)V
	public fun setMeasurement (Ljava/lang/String;Ljava/lang/Number;Lio/sentry/MeasurementUnit;)V
	public fun setName (Ljava/lang/String;)V
	public fun setName (Ljava/lang/String;Lio/sentry/protocol/TransactionNameSource;)V
	public fun setOperation (Ljava/lang/String;)V
	public fun setStatus (Lio/sentry/SpanStatus;)V
	public fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public fun setThrowable (Ljava/lang/Throwable;)V
	public fun startChild (Ljava/lang/String;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SentryDate;Lio/sentry/Instrumenter;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SentryDate;Lio/sentry/Instrumenter;Lio/sentry/SpanOptions;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SpanOptions;)Lio/sentry/ISpan;
	public fun toBaggageHeader (Ljava/util/List;)Lio/sentry/BaggageHeader;
	public fun toSentryTrace ()Lio/sentry/SentryTraceHeader;
	public fun traceContext ()Lio/sentry/TraceContext;
	public fun updateEndDate (Lio/sentry/SentryDate;)Z
}

public final class io/sentry/Session : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> (Lio/sentry/Session$State;Ljava/util/Date;Ljava/util/Date;ILjava/lang/String;Ljava/util/UUID;Ljava/lang/Boolean;Ljava/lang/Long;Ljava/lang/Double;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Lio/sentry/protocol/User;Ljava/lang/String;Ljava/lang/String;)V
	public fun clone ()Lio/sentry/Session;
	public synthetic fun clone ()Ljava/lang/Object;
	public fun end ()V
	public fun end (Ljava/util/Date;)V
	public fun errorCount ()I
	public fun getAbnormalMechanism ()Ljava/lang/String;
	public fun getDistinctId ()Ljava/lang/String;
	public fun getDuration ()Ljava/lang/Double;
	public fun getEnvironment ()Ljava/lang/String;
	public fun getInit ()Ljava/lang/Boolean;
	public fun getIpAddress ()Ljava/lang/String;
	public fun getRelease ()Ljava/lang/String;
	public fun getSequence ()Ljava/lang/Long;
	public fun getSessionId ()Ljava/util/UUID;
	public fun getStarted ()Ljava/util/Date;
	public fun getStatus ()Lio/sentry/Session$State;
	public fun getTimestamp ()Ljava/util/Date;
	public fun getUnknown ()Ljava/util/Map;
	public fun getUserAgent ()Ljava/lang/String;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setInitAsTrue ()V
	public fun setUnknown (Ljava/util/Map;)V
	public fun update (Lio/sentry/Session$State;Ljava/lang/String;Z)Z
	public fun update (Lio/sentry/Session$State;Ljava/lang/String;ZLjava/lang/String;)Z
}

public final class io/sentry/Session$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/Session;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/Session$JsonKeys {
	public static final field ABNORMAL_MECHANISM Ljava/lang/String;
	public static final field ATTRS Ljava/lang/String;
	public static final field DID Ljava/lang/String;
	public static final field DURATION Ljava/lang/String;
	public static final field ENVIRONMENT Ljava/lang/String;
	public static final field ERRORS Ljava/lang/String;
	public static final field INIT Ljava/lang/String;
	public static final field IP_ADDRESS Ljava/lang/String;
	public static final field RELEASE Ljava/lang/String;
	public static final field SEQ Ljava/lang/String;
	public static final field SID Ljava/lang/String;
	public static final field STARTED Ljava/lang/String;
	public static final field STATUS Ljava/lang/String;
	public static final field TIMESTAMP Ljava/lang/String;
	public static final field USER_AGENT Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/Session$State : java/lang/Enum {
	public static final field Abnormal Lio/sentry/Session$State;
	public static final field Crashed Lio/sentry/Session$State;
	public static final field Exited Lio/sentry/Session$State;
	public static final field Ok Lio/sentry/Session$State;
	public static fun valueOf (Ljava/lang/String;)Lio/sentry/Session$State;
	public static fun values ()[Lio/sentry/Session$State;
}

public final class io/sentry/ShutdownHookIntegration : io/sentry/Integration, java/io/Closeable {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Runtime;)V
	public fun close ()V
	public fun register (Lio/sentry/IHub;Lio/sentry/SentryOptions;)V
}

public final class io/sentry/Span : io/sentry/ISpan {
	public fun <init> (Lio/sentry/TransactionContext;Lio/sentry/SentryTracer;Lio/sentry/IHub;Lio/sentry/SentryDate;Lio/sentry/SpanOptions;)V
	public fun finish ()V
	public fun finish (Lio/sentry/SpanStatus;)V
	public fun finish (Lio/sentry/SpanStatus;Lio/sentry/SentryDate;)V
	public fun getData ()Ljava/util/Map;
	public fun getData (Ljava/lang/String;)Ljava/lang/Object;
	public fun getDescription ()Ljava/lang/String;
	public fun getFinishDate ()Lio/sentry/SentryDate;
	public fun getOperation ()Ljava/lang/String;
	public fun getParentSpanId ()Lio/sentry/SpanId;
	public fun getSamplingDecision ()Lio/sentry/TracesSamplingDecision;
	public fun getSpanContext ()Lio/sentry/SpanContext;
	public fun getSpanId ()Lio/sentry/SpanId;
	public fun getStartDate ()Lio/sentry/SentryDate;
	public fun getStatus ()Lio/sentry/SpanStatus;
	public fun getTag (Ljava/lang/String;)Ljava/lang/String;
	public fun getTags ()Ljava/util/Map;
	public fun getThrowable ()Ljava/lang/Throwable;
	public fun getTraceId ()Lio/sentry/protocol/SentryId;
	public fun isFinished ()Z
	public fun isNoOp ()Z
	public fun isProfileSampled ()Ljava/lang/Boolean;
	public fun isSampled ()Ljava/lang/Boolean;
	public fun setData (Ljava/lang/String;Ljava/lang/Object;)V
	public fun setDescription (Ljava/lang/String;)V
	public fun setMeasurement (Ljava/lang/String;Ljava/lang/Number;)V
	public fun setMeasurement (Ljava/lang/String;Ljava/lang/Number;Lio/sentry/MeasurementUnit;)V
	public fun setOperation (Ljava/lang/String;)V
	public fun setStatus (Lio/sentry/SpanStatus;)V
	public fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public fun setThrowable (Ljava/lang/Throwable;)V
	public fun startChild (Ljava/lang/String;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SentryDate;Lio/sentry/Instrumenter;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SentryDate;Lio/sentry/Instrumenter;Lio/sentry/SpanOptions;)Lio/sentry/ISpan;
	public fun startChild (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SpanOptions;)Lio/sentry/ISpan;
	public fun toBaggageHeader (Ljava/util/List;)Lio/sentry/BaggageHeader;
	public fun toSentryTrace ()Lio/sentry/SentryTraceHeader;
	public fun traceContext ()Lio/sentry/TraceContext;
	public fun updateEndDate (Lio/sentry/SentryDate;)Z
}

public class io/sentry/SpanContext : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public static final field TYPE Ljava/lang/String;
	protected field description Ljava/lang/String;
	protected field op Ljava/lang/String;
	protected field status Lio/sentry/SpanStatus;
	protected field tags Ljava/util/Map;
	public fun <init> (Lio/sentry/SpanContext;)V
	public fun <init> (Lio/sentry/protocol/SentryId;Lio/sentry/SpanId;Lio/sentry/SpanId;Ljava/lang/String;Ljava/lang/String;Lio/sentry/TracesSamplingDecision;Lio/sentry/SpanStatus;)V
	public fun <init> (Lio/sentry/protocol/SentryId;Lio/sentry/SpanId;Ljava/lang/String;Lio/sentry/SpanId;Lio/sentry/TracesSamplingDecision;)V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Lio/sentry/TracesSamplingDecision;)V
	public fun getDescription ()Ljava/lang/String;
	public fun getOperation ()Ljava/lang/String;
	public fun getParentSpanId ()Lio/sentry/SpanId;
	public fun getProfileSampled ()Ljava/lang/Boolean;
	public fun getSampled ()Ljava/lang/Boolean;
	public fun getSamplingDecision ()Lio/sentry/TracesSamplingDecision;
	public fun getSpanId ()Lio/sentry/SpanId;
	public fun getStatus ()Lio/sentry/SpanStatus;
	public fun getTags ()Ljava/util/Map;
	public fun getTraceId ()Lio/sentry/protocol/SentryId;
	public fun getUnknown ()Ljava/util/Map;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setDescription (Ljava/lang/String;)V
	public fun setOperation (Ljava/lang/String;)V
	public fun setSampled (Ljava/lang/Boolean;)V
	public fun setSampled (Ljava/lang/Boolean;Ljava/lang/Boolean;)V
	public fun setSamplingDecision (Lio/sentry/TracesSamplingDecision;)V
	public fun setStatus (Lio/sentry/SpanStatus;)V
	public fun setTag (Ljava/lang/String;Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/SpanContext$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/SpanContext;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/SpanContext$JsonKeys {
	public static final field DESCRIPTION Ljava/lang/String;
	public static final field OP Ljava/lang/String;
	public static final field PARENT_SPAN_ID Ljava/lang/String;
	public static final field SPAN_ID Ljava/lang/String;
	public static final field STATUS Ljava/lang/String;
	public static final field TAGS Ljava/lang/String;
	public static final field TRACE_ID Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/SpanId : io/sentry/JsonSerializable {
	public static final field EMPTY_ID Lio/sentry/SpanId;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/sentry/SpanId$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/SpanId;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public class io/sentry/SpanOptions {
	public fun <init> ()V
	public fun isIdle ()Z
	public fun isTrimEnd ()Z
	public fun isTrimStart ()Z
	public fun setIdle (Z)V
	public fun setTrimEnd (Z)V
	public fun setTrimStart (Z)V
}

public final class io/sentry/SpanStatus : java/lang/Enum, io/sentry/JsonSerializable {
	public static final field ABORTED Lio/sentry/SpanStatus;
	public static final field ALREADY_EXISTS Lio/sentry/SpanStatus;
	public static final field CANCELLED Lio/sentry/SpanStatus;
	public static final field DATA_LOSS Lio/sentry/SpanStatus;
	public static final field DEADLINE_EXCEEDED Lio/sentry/SpanStatus;
	public static final field FAILED_PRECONDITION Lio/sentry/SpanStatus;
	public static final field INTERNAL_ERROR Lio/sentry/SpanStatus;
	public static final field INVALID_ARGUMENT Lio/sentry/SpanStatus;
	public static final field NOT_FOUND Lio/sentry/SpanStatus;
	public static final field OK Lio/sentry/SpanStatus;
	public static final field OUT_OF_RANGE Lio/sentry/SpanStatus;
	public static final field PERMISSION_DENIED Lio/sentry/SpanStatus;
	public static final field RESOURCE_EXHAUSTED Lio/sentry/SpanStatus;
	public static final field UNAUTHENTICATED Lio/sentry/SpanStatus;
	public static final field UNAVAILABLE Lio/sentry/SpanStatus;
	public static final field UNIMPLEMENTED Lio/sentry/SpanStatus;
	public static final field UNKNOWN Lio/sentry/SpanStatus;
	public static final field UNKNOWN_ERROR Lio/sentry/SpanStatus;
	public static fun fromHttpStatusCode (I)Lio/sentry/SpanStatus;
	public static fun fromHttpStatusCode (Ljava/lang/Integer;Lio/sentry/SpanStatus;)Lio/sentry/SpanStatus;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public static fun valueOf (Ljava/lang/String;)Lio/sentry/SpanStatus;
	public static fun values ()[Lio/sentry/SpanStatus;
}

public final class io/sentry/SpanStatus$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/SpanStatus;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/SystemOutLogger : io/sentry/ILogger {
	public fun <init> ()V
	public fun isEnabled (Lio/sentry/SentryLevel;)Z
	public fun log (Lio/sentry/SentryLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun log (Lio/sentry/SentryLevel;Ljava/lang/String;[Ljava/lang/Object;)V
	public fun log (Lio/sentry/SentryLevel;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
}

public final class io/sentry/TraceContext : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun getEnvironment ()Ljava/lang/String;
	public fun getPublicKey ()Ljava/lang/String;
	public fun getRelease ()Ljava/lang/String;
	public fun getSampleRate ()Ljava/lang/String;
	public fun getTraceId ()Lio/sentry/protocol/SentryId;
	public fun getTransaction ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getUserId ()Ljava/lang/String;
	public fun getUserSegment ()Ljava/lang/String;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/TraceContext$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/TraceContext;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/TraceContext$JsonKeys {
	public static final field ENVIRONMENT Ljava/lang/String;
	public static final field PUBLIC_KEY Ljava/lang/String;
	public static final field RELEASE Ljava/lang/String;
	public static final field SAMPLE_RATE Ljava/lang/String;
	public static final field TRACE_ID Ljava/lang/String;
	public static final field TRANSACTION Ljava/lang/String;
	public static final field USER Ljava/lang/String;
	public static final field USER_ID Ljava/lang/String;
	public static final field USER_SEGMENT Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/TracesSamplingDecision {
	public fun <init> (Ljava/lang/Boolean;)V
	public fun <init> (Ljava/lang/Boolean;Ljava/lang/Double;)V
	public fun <init> (Ljava/lang/Boolean;Ljava/lang/Double;Ljava/lang/Boolean;Ljava/lang/Double;)V
	public fun getProfileSampleRate ()Ljava/lang/Double;
	public fun getProfileSampled ()Ljava/lang/Boolean;
	public fun getSampleRate ()Ljava/lang/Double;
	public fun getSampled ()Ljava/lang/Boolean;
}

public final class io/sentry/TransactionContext : io/sentry/SpanContext {
	public fun <init> (Ljava/lang/String;Lio/sentry/protocol/TransactionNameSource;Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Lio/sentry/protocol/TransactionNameSource;Ljava/lang/String;Lio/sentry/TracesSamplingDecision;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lio/sentry/TracesSamplingDecision;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lio/sentry/protocol/SentryId;Lio/sentry/SpanId;Lio/sentry/protocol/TransactionNameSource;Lio/sentry/SpanId;Lio/sentry/TracesSamplingDecision;Lio/sentry/Baggage;)V
	public static fun fromSentryTrace (Ljava/lang/String;Lio/sentry/protocol/TransactionNameSource;Ljava/lang/String;Lio/sentry/SentryTraceHeader;)Lio/sentry/TransactionContext;
	public static fun fromSentryTrace (Ljava/lang/String;Lio/sentry/protocol/TransactionNameSource;Ljava/lang/String;Lio/sentry/SentryTraceHeader;Lio/sentry/Baggage;Lio/sentry/SpanId;)Lio/sentry/TransactionContext;
	public static fun fromSentryTrace (Ljava/lang/String;Ljava/lang/String;Lio/sentry/SentryTraceHeader;)Lio/sentry/TransactionContext;
	public fun getBaggage ()Lio/sentry/Baggage;
	public fun getInstrumenter ()Lio/sentry/Instrumenter;
	public fun getName ()Ljava/lang/String;
	public fun getParentSampled ()Ljava/lang/Boolean;
	public fun getParentSamplingDecision ()Lio/sentry/TracesSamplingDecision;
	public fun getTransactionNameSource ()Lio/sentry/protocol/TransactionNameSource;
	public fun setInstrumenter (Lio/sentry/Instrumenter;)V
	public fun setParentSampled (Ljava/lang/Boolean;)V
	public fun setParentSampled (Ljava/lang/Boolean;Ljava/lang/Boolean;)V
}

public abstract interface class io/sentry/TransactionFinishedCallback {
	public abstract fun execute (Lio/sentry/ITransaction;)V
}

public final class io/sentry/TransactionOptions : io/sentry/SpanOptions {
	public fun <init> ()V
	public fun getCustomSamplingContext ()Lio/sentry/CustomSamplingContext;
	public fun getIdleTimeout ()Ljava/lang/Long;
	public fun getStartTimestamp ()Lio/sentry/SentryDate;
	public fun getTransactionFinishedCallback ()Lio/sentry/TransactionFinishedCallback;
	public fun isBindToScope ()Z
	public fun isWaitForChildren ()Z
	public fun setBindToScope (Z)V
	public fun setCustomSamplingContext (Lio/sentry/CustomSamplingContext;)V
	public fun setIdleTimeout (Ljava/lang/Long;)V
	public fun setStartTimestamp (Lio/sentry/SentryDate;)V
	public fun setTransactionFinishedCallback (Lio/sentry/TransactionFinishedCallback;)V
	public fun setWaitForChildren (Z)V
}

public abstract interface class io/sentry/TransactionPerformanceCollector {
	public abstract fun start (Lio/sentry/ITransaction;)V
	public abstract fun stop (Lio/sentry/ITransaction;)Ljava/util/List;
}

public final class io/sentry/TypeCheckHint {
	public static final field ANDROID_ACTIVITY Ljava/lang/String;
	public static final field ANDROID_CONFIGURATION Ljava/lang/String;
	public static final field ANDROID_FRAGMENT Ljava/lang/String;
	public static final field ANDROID_INTENT Ljava/lang/String;
	public static final field ANDROID_MOTION_EVENT Ljava/lang/String;
	public static final field ANDROID_NAV_DESTINATION Ljava/lang/String;
	public static final field ANDROID_SENSOR_EVENT Ljava/lang/String;
	public static final field ANDROID_VIEW Ljava/lang/String;
	public static final field APOLLO_REQUEST Ljava/lang/String;
	public static final field APOLLO_RESPONSE Ljava/lang/String;
	public static final field GRAPHQL_HANDLER_PARAMETERS Ljava/lang/String;
	public static final field JUL_LOG_RECORD Ljava/lang/String;
	public static final field LOG4J_LOG_EVENT Ljava/lang/String;
	public static final field LOGBACK_LOGGING_EVENT Ljava/lang/String;
	public static final field OKHTTP_REQUEST Ljava/lang/String;
	public static final field OKHTTP_RESPONSE Ljava/lang/String;
	public static final field OPEN_FEIGN_REQUEST Ljava/lang/String;
	public static final field OPEN_FEIGN_RESPONSE Ljava/lang/String;
	public static final field SENTRY_DART_SDK_NAME Ljava/lang/String;
	public static final field SENTRY_DOTNET_SDK_NAME Ljava/lang/String;
	public static final field SENTRY_IS_FROM_HYBRID_SDK Ljava/lang/String;
	public static final field SENTRY_JAVASCRIPT_SDK_NAME Ljava/lang/String;
	public static final field SENTRY_SYNTHETIC_EXCEPTION Ljava/lang/String;
	public static final field SENTRY_TYPE_CHECK_HINT Ljava/lang/String;
	public static final field SERVLET_REQUEST Ljava/lang/String;
	public static final field SPRING_EXCHANGE_FILTER_REQUEST Ljava/lang/String;
	public static final field SPRING_EXCHANGE_FILTER_RESPONSE Ljava/lang/String;
	public static final field SPRING_REQUEST_FILTER_REQUEST Ljava/lang/String;
	public static final field SPRING_REQUEST_FILTER_RESPONSE Ljava/lang/String;
	public static final field SPRING_REQUEST_INTERCEPTOR_REQUEST Ljava/lang/String;
	public static final field SPRING_REQUEST_INTERCEPTOR_REQUEST_BODY Ljava/lang/String;
	public static final field SPRING_REQUEST_INTERCEPTOR_RESPONSE Ljava/lang/String;
	public static final field SPRING_RESOLVER_REQUEST Ljava/lang/String;
	public static final field SPRING_RESOLVER_RESPONSE Ljava/lang/String;
	public static final field WEBFLUX_EXCEPTION_HANDLER_REQUEST Ljava/lang/String;
	public static final field WEBFLUX_EXCEPTION_HANDLER_RESPONSE Ljava/lang/String;
	public static final field WEBFLUX_FILTER_REQUEST Ljava/lang/String;
	public static final field WEBFLUX_FILTER_RESPONSE Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/UncaughtExceptionHandlerIntegration : io/sentry/Integration, java/io/Closeable, java/lang/Thread$UncaughtExceptionHandler {
	public fun <init> ()V
	public fun close ()V
	public final fun register (Lio/sentry/IHub;Lio/sentry/SentryOptions;)V
	public fun uncaughtException (Ljava/lang/Thread;Ljava/lang/Throwable;)V
}

public final class io/sentry/UserFeedback : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> (Lio/sentry/protocol/SentryId;)V
	public fun <init> (Lio/sentry/protocol/SentryId;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public fun getComments ()Ljava/lang/String;
	public fun getEmail ()Ljava/lang/String;
	public fun getEventId ()Lio/sentry/protocol/SentryId;
	public fun getName ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setComments (Ljava/lang/String;)V
	public fun setEmail (Ljava/lang/String;)V
	public fun setName (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/sentry/UserFeedback$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/UserFeedback;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/UserFeedback$JsonKeys {
	public static final field COMMENTS Ljava/lang/String;
	public static final field EMAIL Ljava/lang/String;
	public static final field EVENT_ID Ljava/lang/String;
	public static final field NAME Ljava/lang/String;
	public fun <init> ()V
}

public class io/sentry/cache/EnvelopeCache : io/sentry/cache/IEnvelopeCache {
	public static final field CRASH_MARKER_FILE Ljava/lang/String;
	public static final field NATIVE_CRASH_MARKER_FILE Ljava/lang/String;
	public static final field PREFIX_CURRENT_SESSION_FILE Ljava/lang/String;
	public static final field STARTUP_CRASH_MARKER_FILE Ljava/lang/String;
	public static final field SUFFIX_ENVELOPE_FILE Ljava/lang/String;
	protected static final field UTF_8 Ljava/nio/charset/Charset;
	public fun <init> (Lio/sentry/SentryOptions;Ljava/lang/String;I)V
	public static fun create (Lio/sentry/SentryOptions;)Lio/sentry/cache/IEnvelopeCache;
	public fun discard (Lio/sentry/SentryEnvelope;)V
	public fun iterator ()Ljava/util/Iterator;
	public fun store (Lio/sentry/SentryEnvelope;Lio/sentry/Hint;)V
}

public abstract interface class io/sentry/cache/IEnvelopeCache : java/lang/Iterable {
	public abstract fun discard (Lio/sentry/SentryEnvelope;)V
	public fun store (Lio/sentry/SentryEnvelope;)V
	public abstract fun store (Lio/sentry/SentryEnvelope;Lio/sentry/Hint;)V
}

public final class io/sentry/clientreport/ClientReport : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> (Ljava/util/Date;Ljava/util/List;)V
	public fun getDiscardedEvents ()Ljava/util/List;
	public fun getTimestamp ()Ljava/util/Date;
	public fun getUnknown ()Ljava/util/Map;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/clientreport/ClientReport$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/clientreport/ClientReport;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/clientreport/ClientReport$JsonKeys {
	public static final field DISCARDED_EVENTS Ljava/lang/String;
	public static final field TIMESTAMP Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/clientreport/ClientReportRecorder : io/sentry/clientreport/IClientReportRecorder {
	public fun <init> (Lio/sentry/SentryOptions;)V
	public fun attachReportToEnvelope (Lio/sentry/SentryEnvelope;)Lio/sentry/SentryEnvelope;
	public fun recordLostEnvelope (Lio/sentry/clientreport/DiscardReason;Lio/sentry/SentryEnvelope;)V
	public fun recordLostEnvelopeItem (Lio/sentry/clientreport/DiscardReason;Lio/sentry/SentryEnvelopeItem;)V
	public fun recordLostEvent (Lio/sentry/clientreport/DiscardReason;Lio/sentry/DataCategory;)V
}

public final class io/sentry/clientreport/DiscardReason : java/lang/Enum {
	public static final field BEFORE_SEND Lio/sentry/clientreport/DiscardReason;
	public static final field CACHE_OVERFLOW Lio/sentry/clientreport/DiscardReason;
	public static final field EVENT_PROCESSOR Lio/sentry/clientreport/DiscardReason;
	public static final field NETWORK_ERROR Lio/sentry/clientreport/DiscardReason;
	public static final field QUEUE_OVERFLOW Lio/sentry/clientreport/DiscardReason;
	public static final field RATELIMIT_BACKOFF Lio/sentry/clientreport/DiscardReason;
	public static final field SAMPLE_RATE Lio/sentry/clientreport/DiscardReason;
	public fun getReason ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lio/sentry/clientreport/DiscardReason;
	public static fun values ()[Lio/sentry/clientreport/DiscardReason;
}

public final class io/sentry/clientreport/DiscardedEvent : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;)V
	public fun getCategory ()Ljava/lang/String;
	public fun getQuantity ()Ljava/lang/Long;
	public fun getReason ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/sentry/clientreport/DiscardedEvent$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/clientreport/DiscardedEvent;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/clientreport/DiscardedEvent$JsonKeys {
	public static final field CATEGORY Ljava/lang/String;
	public static final field QUANTITY Ljava/lang/String;
	public static final field REASON Ljava/lang/String;
	public fun <init> ()V
}

public abstract interface class io/sentry/clientreport/IClientReportRecorder {
	public abstract fun attachReportToEnvelope (Lio/sentry/SentryEnvelope;)Lio/sentry/SentryEnvelope;
	public abstract fun recordLostEnvelope (Lio/sentry/clientreport/DiscardReason;Lio/sentry/SentryEnvelope;)V
	public abstract fun recordLostEnvelopeItem (Lio/sentry/clientreport/DiscardReason;Lio/sentry/SentryEnvelopeItem;)V
	public abstract fun recordLostEvent (Lio/sentry/clientreport/DiscardReason;Lio/sentry/DataCategory;)V
}

public abstract interface class io/sentry/clientreport/IClientReportStorage {
	public abstract fun addCount (Lio/sentry/clientreport/ClientReportKey;Ljava/lang/Long;)V
	public abstract fun resetCountsAndGet ()Ljava/util/List;
}

public final class io/sentry/clientreport/NoOpClientReportRecorder : io/sentry/clientreport/IClientReportRecorder {
	public fun <init> ()V
	public fun attachReportToEnvelope (Lio/sentry/SentryEnvelope;)Lio/sentry/SentryEnvelope;
	public fun recordLostEnvelope (Lio/sentry/clientreport/DiscardReason;Lio/sentry/SentryEnvelope;)V
	public fun recordLostEnvelopeItem (Lio/sentry/clientreport/DiscardReason;Lio/sentry/SentryEnvelopeItem;)V
	public fun recordLostEvent (Lio/sentry/clientreport/DiscardReason;Lio/sentry/DataCategory;)V
}

public abstract interface class io/sentry/config/PropertiesProvider {
	public fun getBooleanProperty (Ljava/lang/String;)Ljava/lang/Boolean;
	public fun getDoubleProperty (Ljava/lang/String;)Ljava/lang/Double;
	public fun getList (Ljava/lang/String;)Ljava/util/List;
	public fun getLongProperty (Ljava/lang/String;)Ljava/lang/Long;
	public abstract fun getMap (Ljava/lang/String;)Ljava/util/Map;
	public abstract fun getProperty (Ljava/lang/String;)Ljava/lang/String;
	public fun getProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
}

public final class io/sentry/config/PropertiesProviderFactory {
	public fun <init> ()V
	public static fun create ()Lio/sentry/config/PropertiesProvider;
}

public final class io/sentry/exception/ExceptionMechanismException : java/lang/RuntimeException {
	public fun <init> (Lio/sentry/protocol/Mechanism;Ljava/lang/Throwable;Ljava/lang/Thread;)V
	public fun <init> (Lio/sentry/protocol/Mechanism;Ljava/lang/Throwable;Ljava/lang/Thread;Z)V
	public fun getExceptionMechanism ()Lio/sentry/protocol/Mechanism;
	public fun getThread ()Ljava/lang/Thread;
	public fun getThrowable ()Ljava/lang/Throwable;
	public fun isSnapshot ()Z
}

public final class io/sentry/exception/InvalidSentryTraceHeaderException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun getSentryTraceHeader ()Ljava/lang/String;
}

public final class io/sentry/exception/SentryEnvelopeException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class io/sentry/exception/SentryHttpClientException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public abstract interface class io/sentry/hints/AbnormalExit {
	public fun ignoreCurrentThread ()Z
	public abstract fun mechanism ()Ljava/lang/String;
}

public abstract interface class io/sentry/hints/ApplyScopeData {
}

public abstract interface class io/sentry/hints/Cached {
}

public abstract interface class io/sentry/hints/DiskFlushNotification {
	public abstract fun markFlushed ()V
}

public abstract interface class io/sentry/hints/Flushable {
	public abstract fun waitFlush ()Z
}

public abstract interface class io/sentry/hints/Resettable {
	public abstract fun reset ()V
}

public abstract interface class io/sentry/hints/Retryable {
	public abstract fun isRetry ()Z
	public abstract fun setRetry (Z)V
}

public abstract interface class io/sentry/hints/SessionEnd {
}

public final class io/sentry/hints/SessionEndHint : io/sentry/hints/SessionEnd {
	public fun <init> ()V
}

public abstract interface class io/sentry/hints/SessionStart {
}

public final class io/sentry/hints/SessionStartHint : io/sentry/hints/SessionStart {
	public fun <init> ()V
}

public abstract interface class io/sentry/hints/SubmissionResult {
	public abstract fun isSuccess ()Z
	public abstract fun setResult (Z)V
}

public final class io/sentry/instrumentation/file/SentryFileInputStream : java/io/FileInputStream {
	public fun <init> (Ljava/io/File;)V
	public fun <init> (Ljava/io/FileDescriptor;)V
	public fun <init> (Ljava/lang/String;)V
	public fun close ()V
	public fun read ()I
	public fun read ([B)I
	public fun read ([BII)I
	public fun skip (J)J
}

public final class io/sentry/instrumentation/file/SentryFileInputStream$Factory {
	public fun <init> ()V
	public static fun create (Ljava/io/FileInputStream;Ljava/io/File;)Ljava/io/FileInputStream;
	public static fun create (Ljava/io/FileInputStream;Ljava/io/FileDescriptor;)Ljava/io/FileInputStream;
	public static fun create (Ljava/io/FileInputStream;Ljava/lang/String;)Ljava/io/FileInputStream;
}

public final class io/sentry/instrumentation/file/SentryFileOutputStream : java/io/FileOutputStream {
	public fun <init> (Ljava/io/File;)V
	public fun <init> (Ljava/io/File;Z)V
	public fun <init> (Ljava/io/FileDescriptor;)V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Z)V
	public fun close ()V
	public fun write (I)V
	public fun write ([B)V
	public fun write ([BII)V
}

public final class io/sentry/instrumentation/file/SentryFileOutputStream$Factory {
	public fun <init> ()V
	public static fun create (Ljava/io/FileOutputStream;Ljava/io/File;)Ljava/io/FileOutputStream;
	public static fun create (Ljava/io/FileOutputStream;Ljava/io/File;Z)Ljava/io/FileOutputStream;
	public static fun create (Ljava/io/FileOutputStream;Ljava/io/FileDescriptor;)Ljava/io/FileOutputStream;
	public static fun create (Ljava/io/FileOutputStream;Ljava/lang/String;)Ljava/io/FileOutputStream;
	public static fun create (Ljava/io/FileOutputStream;Ljava/lang/String;Z)Ljava/io/FileOutputStream;
}

public final class io/sentry/instrumentation/file/SentryFileReader : java/io/InputStreamReader {
	public fun <init> (Ljava/io/File;)V
	public fun <init> (Ljava/io/FileDescriptor;)V
	public fun <init> (Ljava/lang/String;)V
}

public final class io/sentry/instrumentation/file/SentryFileWriter : java/io/OutputStreamWriter {
	public fun <init> (Ljava/io/File;)V
	public fun <init> (Ljava/io/File;Z)V
	public fun <init> (Ljava/io/FileDescriptor;)V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Z)V
}

public abstract interface class io/sentry/internal/gestures/GestureTargetLocator {
	public abstract fun locate (Ljava/lang/Object;FFLio/sentry/internal/gestures/UiElement$Type;)Lio/sentry/internal/gestures/UiElement;
}

public final class io/sentry/internal/gestures/UiElement {
	public fun <init> (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getClassName ()Ljava/lang/String;
	public fun getIdentifier ()Ljava/lang/String;
	public fun getResourceName ()Ljava/lang/String;
	public fun getTag ()Ljava/lang/String;
	public fun getView ()Ljava/lang/Object;
	public fun hashCode ()I
}

public final class io/sentry/internal/gestures/UiElement$Type : java/lang/Enum {
	public static final field CLICKABLE Lio/sentry/internal/gestures/UiElement$Type;
	public static final field SCROLLABLE Lio/sentry/internal/gestures/UiElement$Type;
	public static fun valueOf (Ljava/lang/String;)Lio/sentry/internal/gestures/UiElement$Type;
	public static fun values ()[Lio/sentry/internal/gestures/UiElement$Type;
}

public final class io/sentry/internal/modules/CompositeModulesLoader : io/sentry/internal/modules/ModulesLoader {
	public fun <init> (Ljava/util/List;Lio/sentry/ILogger;)V
}

public abstract interface class io/sentry/internal/modules/IModulesLoader {
	public abstract fun getOrLoadModules ()Ljava/util/Map;
}

public final class io/sentry/internal/modules/ManifestModulesLoader : io/sentry/internal/modules/ModulesLoader {
	public fun <init> (Lio/sentry/ILogger;)V
}

public abstract class io/sentry/internal/modules/ModulesLoader : io/sentry/internal/modules/IModulesLoader {
	public static final field EXTERNAL_MODULES_FILENAME Ljava/lang/String;
	protected final field logger Lio/sentry/ILogger;
	public fun <init> (Lio/sentry/ILogger;)V
	public fun getOrLoadModules ()Ljava/util/Map;
	protected abstract fun loadModules ()Ljava/util/Map;
	protected fun parseStream (Ljava/io/InputStream;)Ljava/util/Map;
}

public final class io/sentry/internal/modules/NoOpModulesLoader : io/sentry/internal/modules/IModulesLoader {
	public static fun getInstance ()Lio/sentry/internal/modules/NoOpModulesLoader;
	public fun getOrLoadModules ()Ljava/util/Map;
}

public final class io/sentry/internal/modules/ResourcesModulesLoader : io/sentry/internal/modules/ModulesLoader {
	public fun <init> (Lio/sentry/ILogger;)V
}

public final class io/sentry/profilemeasurements/ProfileMeasurement : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public static final field ID_CPU_USAGE Ljava/lang/String;
	public static final field ID_FROZEN_FRAME_RENDERS Ljava/lang/String;
	public static final field ID_MEMORY_FOOTPRINT Ljava/lang/String;
	public static final field ID_MEMORY_NATIVE_FOOTPRINT Ljava/lang/String;
	public static final field ID_SCREEN_FRAME_RATES Ljava/lang/String;
	public static final field ID_SLOW_FRAME_RENDERS Ljava/lang/String;
	public static final field ID_UNKNOWN Ljava/lang/String;
	public static final field UNIT_BYTES Ljava/lang/String;
	public static final field UNIT_HZ Ljava/lang/String;
	public static final field UNIT_NANOSECONDS Ljava/lang/String;
	public static final field UNIT_PERCENT Ljava/lang/String;
	public static final field UNIT_UNKNOWN Ljava/lang/String;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/util/Collection;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getUnit ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getValues ()Ljava/util/Collection;
	public fun hashCode ()I
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setUnit (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun setValues (Ljava/util/Collection;)V
}

public final class io/sentry/profilemeasurements/ProfileMeasurement$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/profilemeasurements/ProfileMeasurement;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/profilemeasurements/ProfileMeasurement$JsonKeys {
	public static final field UNIT Ljava/lang/String;
	public static final field VALUES Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/profilemeasurements/ProfileMeasurementValue : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Long;Ljava/lang/Number;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getUnknown ()Ljava/util/Map;
	public fun getValue ()D
	public fun hashCode ()I
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/profilemeasurements/ProfileMeasurementValue$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/profilemeasurements/ProfileMeasurementValue;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/profilemeasurements/ProfileMeasurementValue$JsonKeys {
	public static final field START_NS Ljava/lang/String;
	public static final field VALUE Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/App : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public static final field TYPE Ljava/lang/String;
	public fun <init> ()V
	public fun getAppBuild ()Ljava/lang/String;
	public fun getAppIdentifier ()Ljava/lang/String;
	public fun getAppName ()Ljava/lang/String;
	public fun getAppStartTime ()Ljava/util/Date;
	public fun getAppVersion ()Ljava/lang/String;
	public fun getBuildType ()Ljava/lang/String;
	public fun getDeviceAppHash ()Ljava/lang/String;
	public fun getInForeground ()Ljava/lang/Boolean;
	public fun getPermissions ()Ljava/util/Map;
	public fun getUnknown ()Ljava/util/Map;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setAppBuild (Ljava/lang/String;)V
	public fun setAppIdentifier (Ljava/lang/String;)V
	public fun setAppName (Ljava/lang/String;)V
	public fun setAppStartTime (Ljava/util/Date;)V
	public fun setAppVersion (Ljava/lang/String;)V
	public fun setBuildType (Ljava/lang/String;)V
	public fun setDeviceAppHash (Ljava/lang/String;)V
	public fun setInForeground (Ljava/lang/Boolean;)V
	public fun setPermissions (Ljava/util/Map;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/protocol/App$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/App;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/App$JsonKeys {
	public static final field APP_BUILD Ljava/lang/String;
	public static final field APP_IDENTIFIER Ljava/lang/String;
	public static final field APP_NAME Ljava/lang/String;
	public static final field APP_PERMISSIONS Ljava/lang/String;
	public static final field APP_START_TIME Ljava/lang/String;
	public static final field APP_VERSION Ljava/lang/String;
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEVICE_APP_HASH Ljava/lang/String;
	public static final field IN_FOREGROUND Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/Browser : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public static final field TYPE Ljava/lang/String;
	public fun <init> ()V
	public fun getName ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getVersion ()Ljava/lang/String;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setName (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun setVersion (Ljava/lang/String;)V
}

public final class io/sentry/protocol/Browser$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/Browser;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/Browser$JsonKeys {
	public static final field NAME Ljava/lang/String;
	public static final field VERSION Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/Contexts : java/util/concurrent/ConcurrentHashMap, io/sentry/JsonSerializable {
	public fun <init> ()V
	public fun <init> (Lio/sentry/protocol/Contexts;)V
	public fun getApp ()Lio/sentry/protocol/App;
	public fun getBrowser ()Lio/sentry/protocol/Browser;
	public fun getDevice ()Lio/sentry/protocol/Device;
	public fun getGpu ()Lio/sentry/protocol/Gpu;
	public fun getOperatingSystem ()Lio/sentry/protocol/OperatingSystem;
	public fun getResponse ()Lio/sentry/protocol/Response;
	public fun getRuntime ()Lio/sentry/protocol/SentryRuntime;
	public fun getTrace ()Lio/sentry/SpanContext;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setApp (Lio/sentry/protocol/App;)V
	public fun setBrowser (Lio/sentry/protocol/Browser;)V
	public fun setDevice (Lio/sentry/protocol/Device;)V
	public fun setGpu (Lio/sentry/protocol/Gpu;)V
	public fun setOperatingSystem (Lio/sentry/protocol/OperatingSystem;)V
	public fun setResponse (Lio/sentry/protocol/Response;)V
	public fun setRuntime (Lio/sentry/protocol/SentryRuntime;)V
	public fun setTrace (Lio/sentry/SpanContext;)V
}

public final class io/sentry/protocol/Contexts$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/Contexts;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/DebugImage : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public static final field PROGUARD Ljava/lang/String;
	public fun <init> ()V
	public fun getArch ()Ljava/lang/String;
	public fun getCodeFile ()Ljava/lang/String;
	public fun getCodeId ()Ljava/lang/String;
	public fun getDebugFile ()Ljava/lang/String;
	public fun getDebugId ()Ljava/lang/String;
	public fun getImageAddr ()Ljava/lang/String;
	public fun getImageSize ()Ljava/lang/Long;
	public fun getType ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getUuid ()Ljava/lang/String;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setArch (Ljava/lang/String;)V
	public fun setCodeFile (Ljava/lang/String;)V
	public fun setCodeId (Ljava/lang/String;)V
	public fun setDebugFile (Ljava/lang/String;)V
	public fun setDebugId (Ljava/lang/String;)V
	public fun setImageAddr (Ljava/lang/String;)V
	public fun setImageSize (J)V
	public fun setImageSize (Ljava/lang/Long;)V
	public fun setType (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun setUuid (Ljava/lang/String;)V
}

public final class io/sentry/protocol/DebugImage$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/DebugImage;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/DebugImage$JsonKeys {
	public static final field ARCH Ljava/lang/String;
	public static final field CODE_FILE Ljava/lang/String;
	public static final field CODE_ID Ljava/lang/String;
	public static final field DEBUG_FILE Ljava/lang/String;
	public static final field DEBUG_ID Ljava/lang/String;
	public static final field IMAGE_ADDR Ljava/lang/String;
	public static final field IMAGE_SIZE Ljava/lang/String;
	public static final field TYPE Ljava/lang/String;
	public static final field UUID Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/DebugMeta : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun getImages ()Ljava/util/List;
	public fun getSdkInfo ()Lio/sentry/protocol/SdkInfo;
	public fun getUnknown ()Ljava/util/Map;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setImages (Ljava/util/List;)V
	public fun setSdkInfo (Lio/sentry/protocol/SdkInfo;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/protocol/DebugMeta$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/DebugMeta;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/DebugMeta$JsonKeys {
	public static final field IMAGES Ljava/lang/String;
	public static final field SDK_INFO Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/Device : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public static final field TYPE Ljava/lang/String;
	public fun <init> ()V
	public fun getArchs ()[Ljava/lang/String;
	public fun getBatteryLevel ()Ljava/lang/Float;
	public fun getBatteryTemperature ()Ljava/lang/Float;
	public fun getBootTime ()Ljava/util/Date;
	public fun getBrand ()Ljava/lang/String;
	public fun getConnectionType ()Ljava/lang/String;
	public fun getExternalFreeStorage ()Ljava/lang/Long;
	public fun getExternalStorageSize ()Ljava/lang/Long;
	public fun getFamily ()Ljava/lang/String;
	public fun getFreeMemory ()Ljava/lang/Long;
	public fun getFreeStorage ()Ljava/lang/Long;
	public fun getId ()Ljava/lang/String;
	public fun getLanguage ()Ljava/lang/String;
	public fun getLocale ()Ljava/lang/String;
	public fun getManufacturer ()Ljava/lang/String;
	public fun getMemorySize ()Ljava/lang/Long;
	public fun getModel ()Ljava/lang/String;
	public fun getModelId ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getOrientation ()Lio/sentry/protocol/Device$DeviceOrientation;
	public fun getScreenDensity ()Ljava/lang/Float;
	public fun getScreenDpi ()Ljava/lang/Integer;
	public fun getScreenHeightPixels ()Ljava/lang/Integer;
	public fun getScreenWidthPixels ()Ljava/lang/Integer;
	public fun getStorageSize ()Ljava/lang/Long;
	public fun getTimezone ()Ljava/util/TimeZone;
	public fun getUnknown ()Ljava/util/Map;
	public fun getUsableMemory ()Ljava/lang/Long;
	public fun isCharging ()Ljava/lang/Boolean;
	public fun isLowMemory ()Ljava/lang/Boolean;
	public fun isOnline ()Ljava/lang/Boolean;
	public fun isSimulator ()Ljava/lang/Boolean;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setArchs ([Ljava/lang/String;)V
	public fun setBatteryLevel (Ljava/lang/Float;)V
	public fun setBatteryTemperature (Ljava/lang/Float;)V
	public fun setBootTime (Ljava/util/Date;)V
	public fun setBrand (Ljava/lang/String;)V
	public fun setCharging (Ljava/lang/Boolean;)V
	public fun setConnectionType (Ljava/lang/String;)V
	public fun setExternalFreeStorage (Ljava/lang/Long;)V
	public fun setExternalStorageSize (Ljava/lang/Long;)V
	public fun setFamily (Ljava/lang/String;)V
	public fun setFreeMemory (Ljava/lang/Long;)V
	public fun setFreeStorage (Ljava/lang/Long;)V
	public fun setId (Ljava/lang/String;)V
	public fun setLanguage (Ljava/lang/String;)V
	public fun setLocale (Ljava/lang/String;)V
	public fun setLowMemory (Ljava/lang/Boolean;)V
	public fun setManufacturer (Ljava/lang/String;)V
	public fun setMemorySize (Ljava/lang/Long;)V
	public fun setModel (Ljava/lang/String;)V
	public fun setModelId (Ljava/lang/String;)V
	public fun setName (Ljava/lang/String;)V
	public fun setOnline (Ljava/lang/Boolean;)V
	public fun setOrientation (Lio/sentry/protocol/Device$DeviceOrientation;)V
	public fun setScreenDensity (Ljava/lang/Float;)V
	public fun setScreenDpi (Ljava/lang/Integer;)V
	public fun setScreenHeightPixels (Ljava/lang/Integer;)V
	public fun setScreenWidthPixels (Ljava/lang/Integer;)V
	public fun setSimulator (Ljava/lang/Boolean;)V
	public fun setStorageSize (Ljava/lang/Long;)V
	public fun setTimezone (Ljava/util/TimeZone;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun setUsableMemory (Ljava/lang/Long;)V
}

public final class io/sentry/protocol/Device$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/Device;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/Device$DeviceOrientation : java/lang/Enum, io/sentry/JsonSerializable {
	public static final field LANDSCAPE Lio/sentry/protocol/Device$DeviceOrientation;
	public static final field PORTRAIT Lio/sentry/protocol/Device$DeviceOrientation;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public static fun valueOf (Ljava/lang/String;)Lio/sentry/protocol/Device$DeviceOrientation;
	public static fun values ()[Lio/sentry/protocol/Device$DeviceOrientation;
}

public final class io/sentry/protocol/Device$DeviceOrientation$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/Device$DeviceOrientation;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/Device$JsonKeys {
	public static final field ARCHS Ljava/lang/String;
	public static final field BATTERY_LEVEL Ljava/lang/String;
	public static final field BATTERY_TEMPERATURE Ljava/lang/String;
	public static final field BOOT_TIME Ljava/lang/String;
	public static final field BRAND Ljava/lang/String;
	public static final field CHARGING Ljava/lang/String;
	public static final field CONNECTION_TYPE Ljava/lang/String;
	public static final field EXTERNAL_FREE_STORAGE Ljava/lang/String;
	public static final field EXTERNAL_STORAGE_SIZE Ljava/lang/String;
	public static final field FAMILY Ljava/lang/String;
	public static final field FREE_MEMORY Ljava/lang/String;
	public static final field FREE_STORAGE Ljava/lang/String;
	public static final field ID Ljava/lang/String;
	public static final field LANGUAGE Ljava/lang/String;
	public static final field LOCALE Ljava/lang/String;
	public static final field LOW_MEMORY Ljava/lang/String;
	public static final field MANUFACTURER Ljava/lang/String;
	public static final field MEMORY_SIZE Ljava/lang/String;
	public static final field MODEL Ljava/lang/String;
	public static final field MODEL_ID Ljava/lang/String;
	public static final field NAME Ljava/lang/String;
	public static final field ONLINE Ljava/lang/String;
	public static final field ORIENTATION Ljava/lang/String;
	public static final field SCREEN_DENSITY Ljava/lang/String;
	public static final field SCREEN_DPI Ljava/lang/String;
	public static final field SCREEN_HEIGHT_PIXELS Ljava/lang/String;
	public static final field SCREEN_WIDTH_PIXELS Ljava/lang/String;
	public static final field SIMULATOR Ljava/lang/String;
	public static final field STORAGE_SIZE Ljava/lang/String;
	public static final field TIMEZONE Ljava/lang/String;
	public static final field USABLE_MEMORY Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/Gpu : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public static final field TYPE Ljava/lang/String;
	public fun <init> ()V
	public fun getApiType ()Ljava/lang/String;
	public fun getId ()Ljava/lang/Integer;
	public fun getMemorySize ()Ljava/lang/Integer;
	public fun getName ()Ljava/lang/String;
	public fun getNpotSupport ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getVendorId ()Ljava/lang/String;
	public fun getVendorName ()Ljava/lang/String;
	public fun getVersion ()Ljava/lang/String;
	public fun isMultiThreadedRendering ()Ljava/lang/Boolean;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setApiType (Ljava/lang/String;)V
	public fun setId (Ljava/lang/Integer;)V
	public fun setMemorySize (Ljava/lang/Integer;)V
	public fun setMultiThreadedRendering (Ljava/lang/Boolean;)V
	public fun setName (Ljava/lang/String;)V
	public fun setNpotSupport (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun setVendorId (Ljava/lang/String;)V
	public fun setVendorName (Ljava/lang/String;)V
	public fun setVersion (Ljava/lang/String;)V
}

public final class io/sentry/protocol/Gpu$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/Gpu;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/Gpu$JsonKeys {
	public static final field API_TYPE Ljava/lang/String;
	public static final field ID Ljava/lang/String;
	public static final field MEMORY_SIZE Ljava/lang/String;
	public static final field MULTI_THREADED_RENDERING Ljava/lang/String;
	public static final field NAME Ljava/lang/String;
	public static final field NPOT_SUPPORT Ljava/lang/String;
	public static final field VENDOR_ID Ljava/lang/String;
	public static final field VENDOR_NAME Ljava/lang/String;
	public static final field VERSION Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/MeasurementValue : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> (Ljava/lang/Number;Ljava/lang/String;)V
	public fun <init> (Ljava/lang/Number;Ljava/lang/String;Ljava/util/Map;)V
	public fun getUnit ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getValue ()Ljava/lang/Number;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/protocol/MeasurementValue$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/MeasurementValue;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/MeasurementValue$JsonKeys {
	public static final field UNIT Ljava/lang/String;
	public static final field VALUE Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/Mechanism : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Thread;)V
	public fun getData ()Ljava/util/Map;
	public fun getDescription ()Ljava/lang/String;
	public fun getHelpLink ()Ljava/lang/String;
	public fun getMeta ()Ljava/util/Map;
	public fun getSynthetic ()Ljava/lang/Boolean;
	public fun getType ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun isHandled ()Ljava/lang/Boolean;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setData (Ljava/util/Map;)V
	public fun setDescription (Ljava/lang/String;)V
	public fun setHandled (Ljava/lang/Boolean;)V
	public fun setHelpLink (Ljava/lang/String;)V
	public fun setMeta (Ljava/util/Map;)V
	public fun setSynthetic (Ljava/lang/Boolean;)V
	public fun setType (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/protocol/Mechanism$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/Mechanism;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/Mechanism$JsonKeys {
	public static final field DATA Ljava/lang/String;
	public static final field DESCRIPTION Ljava/lang/String;
	public static final field HANDLED Ljava/lang/String;
	public static final field HELP_LINK Ljava/lang/String;
	public static final field META Ljava/lang/String;
	public static final field SYNTHETIC Ljava/lang/String;
	public static final field TYPE Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/Message : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun getFormatted ()Ljava/lang/String;
	public fun getMessage ()Ljava/lang/String;
	public fun getParams ()Ljava/util/List;
	public fun getUnknown ()Ljava/util/Map;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setFormatted (Ljava/lang/String;)V
	public fun setMessage (Ljava/lang/String;)V
	public fun setParams (Ljava/util/List;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/protocol/Message$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/Message;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/Message$JsonKeys {
	public static final field FORMATTED Ljava/lang/String;
	public static final field MESSAGE Ljava/lang/String;
	public static final field PARAMS Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/OperatingSystem : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public static final field TYPE Ljava/lang/String;
	public fun <init> ()V
	public fun getBuild ()Ljava/lang/String;
	public fun getKernelVersion ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getRawDescription ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getVersion ()Ljava/lang/String;
	public fun isRooted ()Ljava/lang/Boolean;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setBuild (Ljava/lang/String;)V
	public fun setKernelVersion (Ljava/lang/String;)V
	public fun setName (Ljava/lang/String;)V
	public fun setRawDescription (Ljava/lang/String;)V
	public fun setRooted (Ljava/lang/Boolean;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun setVersion (Ljava/lang/String;)V
}

public final class io/sentry/protocol/OperatingSystem$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/OperatingSystem;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/OperatingSystem$JsonKeys {
	public static final field BUILD Ljava/lang/String;
	public static final field KERNEL_VERSION Ljava/lang/String;
	public static final field NAME Ljava/lang/String;
	public static final field RAW_DESCRIPTION Ljava/lang/String;
	public static final field ROOTED Ljava/lang/String;
	public static final field VERSION Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/Request : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun <init> (Lio/sentry/protocol/Request;)V
	public fun getBodySize ()Ljava/lang/Long;
	public fun getCookies ()Ljava/lang/String;
	public fun getData ()Ljava/lang/Object;
	public fun getEnvs ()Ljava/util/Map;
	public fun getFragment ()Ljava/lang/String;
	public fun getHeaders ()Ljava/util/Map;
	public fun getMethod ()Ljava/lang/String;
	public fun getOthers ()Ljava/util/Map;
	public fun getQueryString ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getUrl ()Ljava/lang/String;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setBodySize (Ljava/lang/Long;)V
	public fun setCookies (Ljava/lang/String;)V
	public fun setData (Ljava/lang/Object;)V
	public fun setEnvs (Ljava/util/Map;)V
	public fun setFragment (Ljava/lang/String;)V
	public fun setHeaders (Ljava/util/Map;)V
	public fun setMethod (Ljava/lang/String;)V
	public fun setOthers (Ljava/util/Map;)V
	public fun setQueryString (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun setUrl (Ljava/lang/String;)V
}

public final class io/sentry/protocol/Request$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/Request;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/Request$JsonKeys {
	public static final field BODY_SIZE Ljava/lang/String;
	public static final field COOKIES Ljava/lang/String;
	public static final field DATA Ljava/lang/String;
	public static final field ENV Ljava/lang/String;
	public static final field FRAGMENT Ljava/lang/String;
	public static final field HEADERS Ljava/lang/String;
	public static final field METHOD Ljava/lang/String;
	public static final field OTHER Ljava/lang/String;
	public static final field QUERY_STRING Ljava/lang/String;
	public static final field URL Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/Response : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public static final field TYPE Ljava/lang/String;
	public fun <init> ()V
	public fun <init> (Lio/sentry/protocol/Response;)V
	public fun getBodySize ()Ljava/lang/Long;
	public fun getCookies ()Ljava/lang/String;
	public fun getHeaders ()Ljava/util/Map;
	public fun getStatusCode ()Ljava/lang/Integer;
	public fun getUnknown ()Ljava/util/Map;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setBodySize (Ljava/lang/Long;)V
	public fun setCookies (Ljava/lang/String;)V
	public fun setHeaders (Ljava/util/Map;)V
	public fun setStatusCode (Ljava/lang/Integer;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/protocol/Response$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/Response;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/Response$JsonKeys {
	public static final field BODY_SIZE Ljava/lang/String;
	public static final field COOKIES Ljava/lang/String;
	public static final field HEADERS Ljava/lang/String;
	public static final field STATUS_CODE Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/SdkInfo : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun getSdkName ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getVersionMajor ()Ljava/lang/Integer;
	public fun getVersionMinor ()Ljava/lang/Integer;
	public fun getVersionPatchlevel ()Ljava/lang/Integer;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setSdkName (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun setVersionMajor (Ljava/lang/Integer;)V
	public fun setVersionMinor (Ljava/lang/Integer;)V
	public fun setVersionPatchlevel (Ljava/lang/Integer;)V
}

public final class io/sentry/protocol/SdkInfo$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/SdkInfo;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/SdkInfo$JsonKeys {
	public static final field SDK_NAME Ljava/lang/String;
	public static final field VERSION_MAJOR Ljava/lang/String;
	public static final field VERSION_MINOR Ljava/lang/String;
	public static final field VERSION_PATCHLEVEL Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/SdkVersion : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun addIntegration (Ljava/lang/String;)V
	public fun addPackage (Ljava/lang/String;Ljava/lang/String;)V
	public fun getIntegrationSet ()Ljava/util/Set;
	public fun getIntegrations ()Ljava/util/List;
	public fun getName ()Ljava/lang/String;
	public fun getPackageSet ()Ljava/util/Set;
	public fun getPackages ()Ljava/util/List;
	public fun getUnknown ()Ljava/util/Map;
	public fun getVersion ()Ljava/lang/String;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setName (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun setVersion (Ljava/lang/String;)V
	public static fun updateSdkVersion (Lio/sentry/protocol/SdkVersion;Ljava/lang/String;Ljava/lang/String;)Lio/sentry/protocol/SdkVersion;
}

public final class io/sentry/protocol/SdkVersion$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/SdkVersion;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/SdkVersion$JsonKeys {
	public static final field INTEGRATIONS Ljava/lang/String;
	public static final field NAME Ljava/lang/String;
	public static final field PACKAGES Ljava/lang/String;
	public static final field VERSION Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/SentryException : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun getMechanism ()Lio/sentry/protocol/Mechanism;
	public fun getModule ()Ljava/lang/String;
	public fun getStacktrace ()Lio/sentry/protocol/SentryStackTrace;
	public fun getThreadId ()Ljava/lang/Long;
	public fun getType ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getValue ()Ljava/lang/String;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setMechanism (Lio/sentry/protocol/Mechanism;)V
	public fun setModule (Ljava/lang/String;)V
	public fun setStacktrace (Lio/sentry/protocol/SentryStackTrace;)V
	public fun setThreadId (Ljava/lang/Long;)V
	public fun setType (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun setValue (Ljava/lang/String;)V
}

public final class io/sentry/protocol/SentryException$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/SentryException;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/SentryException$JsonKeys {
	public static final field MECHANISM Ljava/lang/String;
	public static final field MODULE Ljava/lang/String;
	public static final field STACKTRACE Ljava/lang/String;
	public static final field THREAD_ID Ljava/lang/String;
	public static final field TYPE Ljava/lang/String;
	public static final field VALUE Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/SentryId : io/sentry/JsonSerializable {
	public static final field EMPTY_ID Lio/sentry/protocol/SentryId;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/util/UUID;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/sentry/protocol/SentryId$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/SentryId;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/SentryPackage : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setName (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun setVersion (Ljava/lang/String;)V
}

public final class io/sentry/protocol/SentryPackage$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/SentryPackage;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/SentryPackage$JsonKeys {
	public static final field NAME Ljava/lang/String;
	public static final field VERSION Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/SentryRuntime : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public static final field TYPE Ljava/lang/String;
	public fun <init> ()V
	public fun getName ()Ljava/lang/String;
	public fun getRawDescription ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getVersion ()Ljava/lang/String;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setName (Ljava/lang/String;)V
	public fun setRawDescription (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun setVersion (Ljava/lang/String;)V
}

public final class io/sentry/protocol/SentryRuntime$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/SentryRuntime;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/SentryRuntime$JsonKeys {
	public static final field NAME Ljava/lang/String;
	public static final field RAW_DESCRIPTION Ljava/lang/String;
	public static final field VERSION Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/SentrySpan : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> (Lio/sentry/Span;)V
	public fun <init> (Lio/sentry/Span;Ljava/util/Map;)V
	public fun <init> (Ljava/lang/Double;Ljava/lang/Double;Lio/sentry/protocol/SentryId;Lio/sentry/SpanId;Lio/sentry/SpanId;Ljava/lang/String;Ljava/lang/String;Lio/sentry/SpanStatus;Ljava/util/Map;Ljava/util/Map;)V
	public fun getData ()Ljava/util/Map;
	public fun getDescription ()Ljava/lang/String;
	public fun getOp ()Ljava/lang/String;
	public fun getParentSpanId ()Lio/sentry/SpanId;
	public fun getSpanId ()Lio/sentry/SpanId;
	public fun getStartTimestamp ()Ljava/lang/Double;
	public fun getStatus ()Lio/sentry/SpanStatus;
	public fun getTags ()Ljava/util/Map;
	public fun getTimestamp ()Ljava/lang/Double;
	public fun getTraceId ()Lio/sentry/protocol/SentryId;
	public fun getUnknown ()Ljava/util/Map;
	public fun isFinished ()Z
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/protocol/SentrySpan$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/SentrySpan;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/SentrySpan$JsonKeys {
	public static final field DATA Ljava/lang/String;
	public static final field DESCRIPTION Ljava/lang/String;
	public static final field OP Ljava/lang/String;
	public static final field PARENT_SPAN_ID Ljava/lang/String;
	public static final field SPAN_ID Ljava/lang/String;
	public static final field START_TIMESTAMP Ljava/lang/String;
	public static final field STATUS Ljava/lang/String;
	public static final field TAGS Ljava/lang/String;
	public static final field TIMESTAMP Ljava/lang/String;
	public static final field TRACE_ID Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/SentryStackFrame : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun getAbsPath ()Ljava/lang/String;
	public fun getColno ()Ljava/lang/Integer;
	public fun getContextLine ()Ljava/lang/String;
	public fun getFilename ()Ljava/lang/String;
	public fun getFramesOmitted ()Ljava/util/List;
	public fun getFunction ()Ljava/lang/String;
	public fun getImageAddr ()Ljava/lang/String;
	public fun getInstructionAddr ()Ljava/lang/String;
	public fun getLineno ()Ljava/lang/Integer;
	public fun getModule ()Ljava/lang/String;
	public fun getPackage ()Ljava/lang/String;
	public fun getPlatform ()Ljava/lang/String;
	public fun getPostContext ()Ljava/util/List;
	public fun getPreContext ()Ljava/util/List;
	public fun getRawFunction ()Ljava/lang/String;
	public fun getSymbolAddr ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getVars ()Ljava/util/Map;
	public fun isInApp ()Ljava/lang/Boolean;
	public fun isNative ()Ljava/lang/Boolean;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setAbsPath (Ljava/lang/String;)V
	public fun setColno (Ljava/lang/Integer;)V
	public fun setContextLine (Ljava/lang/String;)V
	public fun setFilename (Ljava/lang/String;)V
	public fun setFramesOmitted (Ljava/util/List;)V
	public fun setFunction (Ljava/lang/String;)V
	public fun setImageAddr (Ljava/lang/String;)V
	public fun setInApp (Ljava/lang/Boolean;)V
	public fun setInstructionAddr (Ljava/lang/String;)V
	public fun setLineno (Ljava/lang/Integer;)V
	public fun setModule (Ljava/lang/String;)V
	public fun setNative (Ljava/lang/Boolean;)V
	public fun setPackage (Ljava/lang/String;)V
	public fun setPlatform (Ljava/lang/String;)V
	public fun setPostContext (Ljava/util/List;)V
	public fun setPreContext (Ljava/util/List;)V
	public fun setRawFunction (Ljava/lang/String;)V
	public fun setSymbolAddr (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun setVars (Ljava/util/Map;)V
}

public final class io/sentry/protocol/SentryStackFrame$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/SentryStackFrame;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/SentryStackFrame$JsonKeys {
	public static final field ABS_PATH Ljava/lang/String;
	public static final field COLNO Ljava/lang/String;
	public static final field CONTEXT_LINE Ljava/lang/String;
	public static final field FILENAME Ljava/lang/String;
	public static final field FUNCTION Ljava/lang/String;
	public static final field IMAGE_ADDR Ljava/lang/String;
	public static final field INSTRUCTION_ADDR Ljava/lang/String;
	public static final field IN_APP Ljava/lang/String;
	public static final field LINENO Ljava/lang/String;
	public static final field MODULE Ljava/lang/String;
	public static final field NATIVE Ljava/lang/String;
	public static final field PACKAGE Ljava/lang/String;
	public static final field PLATFORM Ljava/lang/String;
	public static final field RAW_FUNCTION Ljava/lang/String;
	public static final field SYMBOL_ADDR Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/SentryStackTrace : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public fun getFrames ()Ljava/util/List;
	public fun getRegisters ()Ljava/util/Map;
	public fun getSnapshot ()Ljava/lang/Boolean;
	public fun getUnknown ()Ljava/util/Map;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setFrames (Ljava/util/List;)V
	public fun setRegisters (Ljava/util/Map;)V
	public fun setSnapshot (Ljava/lang/Boolean;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/protocol/SentryStackTrace$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/SentryStackTrace;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/SentryStackTrace$JsonKeys {
	public static final field FRAMES Ljava/lang/String;
	public static final field REGISTERS Ljava/lang/String;
	public static final field SNAPSHOT Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/SentryThread : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun getId ()Ljava/lang/Long;
	public fun getName ()Ljava/lang/String;
	public fun getPriority ()Ljava/lang/Integer;
	public fun getStacktrace ()Lio/sentry/protocol/SentryStackTrace;
	public fun getState ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun isCrashed ()Ljava/lang/Boolean;
	public fun isCurrent ()Ljava/lang/Boolean;
	public fun isDaemon ()Ljava/lang/Boolean;
	public fun isMain ()Ljava/lang/Boolean;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setCrashed (Ljava/lang/Boolean;)V
	public fun setCurrent (Ljava/lang/Boolean;)V
	public fun setDaemon (Ljava/lang/Boolean;)V
	public fun setId (Ljava/lang/Long;)V
	public fun setMain (Ljava/lang/Boolean;)V
	public fun setName (Ljava/lang/String;)V
	public fun setPriority (Ljava/lang/Integer;)V
	public fun setStacktrace (Lio/sentry/protocol/SentryStackTrace;)V
	public fun setState (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/protocol/SentryThread$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/SentryThread;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/SentryThread$JsonKeys {
	public static final field CRASHED Ljava/lang/String;
	public static final field CURRENT Ljava/lang/String;
	public static final field DAEMON Ljava/lang/String;
	public static final field ID Ljava/lang/String;
	public static final field MAIN Ljava/lang/String;
	public static final field NAME Ljava/lang/String;
	public static final field PRIORITY Ljava/lang/String;
	public static final field STACKTRACE Ljava/lang/String;
	public static final field STATE Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/SentryTransaction : io/sentry/SentryBaseEvent, io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> (Lio/sentry/SentryTracer;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Double;Ljava/lang/Double;Ljava/util/List;Ljava/util/Map;Lio/sentry/protocol/TransactionInfo;)V
	public fun getMeasurements ()Ljava/util/Map;
	public fun getSamplingDecision ()Lio/sentry/TracesSamplingDecision;
	public fun getSpans ()Ljava/util/List;
	public fun getStartTimestamp ()Ljava/lang/Double;
	public fun getStatus ()Lio/sentry/SpanStatus;
	public fun getTimestamp ()Ljava/lang/Double;
	public fun getTransaction ()Ljava/lang/String;
	public fun getType ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun isFinished ()Z
	public fun isSampled ()Z
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/protocol/SentryTransaction$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/SentryTransaction;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/SentryTransaction$JsonKeys {
	public static final field MEASUREMENTS Ljava/lang/String;
	public static final field SPANS Ljava/lang/String;
	public static final field START_TIMESTAMP Ljava/lang/String;
	public static final field TIMESTAMP Ljava/lang/String;
	public static final field TRANSACTION Ljava/lang/String;
	public static final field TRANSACTION_INFO Ljava/lang/String;
	public static final field TYPE Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/TransactionInfo : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> (Ljava/lang/String;)V
	public fun getUnknown ()Ljava/util/Map;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/protocol/TransactionInfo$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/TransactionInfo;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/TransactionInfo$JsonKeys {
	public static final field SOURCE Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/TransactionNameSource : java/lang/Enum {
	public static final field COMPONENT Lio/sentry/protocol/TransactionNameSource;
	public static final field CUSTOM Lio/sentry/protocol/TransactionNameSource;
	public static final field ROUTE Lio/sentry/protocol/TransactionNameSource;
	public static final field TASK Lio/sentry/protocol/TransactionNameSource;
	public static final field URL Lio/sentry/protocol/TransactionNameSource;
	public static final field VIEW Lio/sentry/protocol/TransactionNameSource;
	public fun apiName ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lio/sentry/protocol/TransactionNameSource;
	public static fun values ()[Lio/sentry/protocol/TransactionNameSource;
}

public final class io/sentry/protocol/User : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun <init> (Lio/sentry/protocol/User;)V
	public fun getData ()Ljava/util/Map;
	public fun getEmail ()Ljava/lang/String;
	public fun getId ()Ljava/lang/String;
	public fun getIpAddress ()Ljava/lang/String;
	public fun getOthers ()Ljava/util/Map;
	public fun getSegment ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getUsername ()Ljava/lang/String;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setData (Ljava/util/Map;)V
	public fun setEmail (Ljava/lang/String;)V
	public fun setId (Ljava/lang/String;)V
	public fun setIpAddress (Ljava/lang/String;)V
	public fun setOthers (Ljava/util/Map;)V
	public fun setSegment (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun setUsername (Ljava/lang/String;)V
}

public final class io/sentry/protocol/User$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/User;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/User$JsonKeys {
	public static final field DATA Ljava/lang/String;
	public static final field EMAIL Ljava/lang/String;
	public static final field ID Ljava/lang/String;
	public static final field IP_ADDRESS Ljava/lang/String;
	public static final field OTHER Ljava/lang/String;
	public static final field SEGMENT Ljava/lang/String;
	public static final field USERNAME Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/ViewHierarchy : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public fun getRenderingSystem ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getWindows ()Ljava/util/List;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setUnknown (Ljava/util/Map;)V
}

public final class io/sentry/protocol/ViewHierarchy$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/ViewHierarchy;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/ViewHierarchy$JsonKeys {
	public static final field RENDERING_SYSTEM Ljava/lang/String;
	public static final field WINDOWS Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/protocol/ViewHierarchyNode : io/sentry/JsonSerializable, io/sentry/JsonUnknown {
	public fun <init> ()V
	public fun getAlpha ()Ljava/lang/Double;
	public fun getChildren ()Ljava/util/List;
	public fun getHeight ()Ljava/lang/Double;
	public fun getIdentifier ()Ljava/lang/String;
	public fun getRenderingSystem ()Ljava/lang/String;
	public fun getTag ()Ljava/lang/String;
	public fun getType ()Ljava/lang/String;
	public fun getUnknown ()Ljava/util/Map;
	public fun getVisibility ()Ljava/lang/String;
	public fun getWidth ()Ljava/lang/Double;
	public fun getX ()Ljava/lang/Double;
	public fun getY ()Ljava/lang/Double;
	public fun serialize (Lio/sentry/JsonObjectWriter;Lio/sentry/ILogger;)V
	public fun setAlpha (Ljava/lang/Double;)V
	public fun setChildren (Ljava/util/List;)V
	public fun setHeight (Ljava/lang/Double;)V
	public fun setIdentifier (Ljava/lang/String;)V
	public fun setRenderingSystem (Ljava/lang/String;)V
	public fun setTag (Ljava/lang/String;)V
	public fun setType (Ljava/lang/String;)V
	public fun setUnknown (Ljava/util/Map;)V
	public fun setVisibility (Ljava/lang/String;)V
	public fun setWidth (Ljava/lang/Double;)V
	public fun setX (Ljava/lang/Double;)V
	public fun setY (Ljava/lang/Double;)V
}

public final class io/sentry/protocol/ViewHierarchyNode$Deserializer : io/sentry/JsonDeserializer {
	public fun <init> ()V
	public fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Lio/sentry/protocol/ViewHierarchyNode;
	public synthetic fun deserialize (Lio/sentry/JsonObjectReader;Lio/sentry/ILogger;)Ljava/lang/Object;
}

public final class io/sentry/protocol/ViewHierarchyNode$JsonKeys {
	public static final field ALPHA Ljava/lang/String;
	public static final field CHILDREN Ljava/lang/String;
	public static final field HEIGHT Ljava/lang/String;
	public static final field IDENTIFIER Ljava/lang/String;
	public static final field RENDERING_SYSTEM Ljava/lang/String;
	public static final field TAG Ljava/lang/String;
	public static final field TYPE Ljava/lang/String;
	public static final field VISIBILITY Ljava/lang/String;
	public static final field WIDTH Ljava/lang/String;
	public static final field X Ljava/lang/String;
	public static final field Y Ljava/lang/String;
	public fun <init> ()V
}

public final class io/sentry/transport/AsyncHttpTransport : io/sentry/transport/ITransport {
	public fun <init> (Lio/sentry/SentryOptions;Lio/sentry/transport/RateLimiter;Lio/sentry/transport/ITransportGate;Lio/sentry/RequestDetails;)V
	public fun <init> (Lio/sentry/transport/QueuedThreadPoolExecutor;Lio/sentry/SentryOptions;Lio/sentry/transport/RateLimiter;Lio/sentry/transport/ITransportGate;Lio/sentry/transport/HttpConnection;)V
	public fun close ()V
	public fun flush (J)V
	public fun send (Lio/sentry/SentryEnvelope;Lio/sentry/Hint;)V
}

public final class io/sentry/transport/CurrentDateProvider : io/sentry/transport/ICurrentDateProvider {
	public final fun getCurrentTimeMillis ()J
	public static fun getInstance ()Lio/sentry/transport/ICurrentDateProvider;
}

public abstract interface class io/sentry/transport/ICurrentDateProvider {
	public abstract fun getCurrentTimeMillis ()J
}

public abstract interface class io/sentry/transport/ITransport : java/io/Closeable {
	public abstract fun flush (J)V
	public fun send (Lio/sentry/SentryEnvelope;)V
	public abstract fun send (Lio/sentry/SentryEnvelope;Lio/sentry/Hint;)V
}

public abstract interface class io/sentry/transport/ITransportGate {
	public abstract fun isConnected ()Z
}

public final class io/sentry/transport/NoOpEnvelopeCache : io/sentry/cache/IEnvelopeCache {
	public fun <init> ()V
	public fun discard (Lio/sentry/SentryEnvelope;)V
	public static fun getInstance ()Lio/sentry/transport/NoOpEnvelopeCache;
	public fun iterator ()Ljava/util/Iterator;
	public fun store (Lio/sentry/SentryEnvelope;Lio/sentry/Hint;)V
}

public final class io/sentry/transport/NoOpTransport : io/sentry/transport/ITransport {
	public fun close ()V
	public fun flush (J)V
	public static fun getInstance ()Lio/sentry/transport/NoOpTransport;
	public fun send (Lio/sentry/SentryEnvelope;Lio/sentry/Hint;)V
}

public final class io/sentry/transport/NoOpTransportGate : io/sentry/transport/ITransportGate {
	public static fun getInstance ()Lio/sentry/transport/NoOpTransportGate;
	public fun isConnected ()Z
}

public final class io/sentry/transport/RateLimiter {
	public fun <init> (Lio/sentry/SentryOptions;)V
	public fun <init> (Lio/sentry/transport/ICurrentDateProvider;Lio/sentry/SentryOptions;)V
	public fun filter (Lio/sentry/SentryEnvelope;Lio/sentry/Hint;)Lio/sentry/SentryEnvelope;
	public fun updateRetryAfterLimits (Ljava/lang/String;Ljava/lang/String;I)V
}

public final class io/sentry/transport/ReusableCountLatch {
	public fun <init> ()V
	public fun <init> (I)V
	public fun decrement ()V
	public fun getCount ()I
	public fun increment ()V
	public fun waitTillZero ()V
	public fun waitTillZero (JLjava/util/concurrent/TimeUnit;)Z
}

public final class io/sentry/transport/StdoutTransport : io/sentry/transport/ITransport {
	public fun <init> (Lio/sentry/ISerializer;)V
	public fun close ()V
	public fun flush (J)V
	public fun send (Lio/sentry/SentryEnvelope;Lio/sentry/Hint;)V
}

public abstract class io/sentry/transport/TransportResult {
	public static fun error ()Lio/sentry/transport/TransportResult;
	public static fun error (I)Lio/sentry/transport/TransportResult;
	public abstract fun getResponseCode ()I
	public abstract fun isSuccess ()Z
	public static fun success ()Lio/sentry/transport/TransportResult;
}

public final class io/sentry/util/ClassLoaderUtils {
	public fun <init> ()V
	public static fun classLoaderOrDefault (Ljava/lang/ClassLoader;)Ljava/lang/ClassLoader;
}

public final class io/sentry/util/CollectionUtils {
	public static fun filterListEntries (Ljava/util/List;Lio/sentry/util/CollectionUtils$Predicate;)Ljava/util/List;
	public static fun filterMapEntries (Ljava/util/Map;Lio/sentry/util/CollectionUtils$Predicate;)Ljava/util/Map;
	public static fun map (Ljava/util/List;Lio/sentry/util/CollectionUtils$Mapper;)Ljava/util/List;
	public static fun newArrayList (Ljava/util/List;)Ljava/util/List;
	public static fun newConcurrentHashMap (Ljava/util/Map;)Ljava/util/Map;
	public static fun newHashMap (Ljava/util/Map;)Ljava/util/Map;
	public static fun size (Ljava/lang/Iterable;)I
}

public abstract interface class io/sentry/util/CollectionUtils$Mapper {
	public abstract fun map (Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class io/sentry/util/CollectionUtils$Predicate {
	public abstract fun test (Ljava/lang/Object;)Z
}

public final class io/sentry/util/ExceptionUtils {
	public fun <init> ()V
	public static fun findRootCause (Ljava/lang/Throwable;)Ljava/lang/Throwable;
}

public final class io/sentry/util/FileUtils {
	public fun <init> ()V
	public static fun deleteRecursively (Ljava/io/File;)Z
	public static fun readText (Ljava/io/File;)Ljava/lang/String;
}

public final class io/sentry/util/HintUtils {
	public static fun createWithTypeCheckHint (Ljava/lang/Object;)Lio/sentry/Hint;
	public static fun getSentrySdkHint (Lio/sentry/Hint;)Ljava/lang/Object;
	public static fun hasType (Lio/sentry/Hint;Ljava/lang/Class;)Z
	public static fun isFromHybridSdk (Lio/sentry/Hint;)Z
	public static fun runIfDoesNotHaveType (Lio/sentry/Hint;Ljava/lang/Class;Lio/sentry/util/HintUtils$SentryNullableConsumer;)V
	public static fun runIfHasType (Lio/sentry/Hint;Ljava/lang/Class;Lio/sentry/util/HintUtils$SentryConsumer;)V
	public static fun runIfHasType (Lio/sentry/Hint;Ljava/lang/Class;Lio/sentry/util/HintUtils$SentryConsumer;Lio/sentry/util/HintUtils$SentryHintFallback;)V
	public static fun runIfHasTypeLogIfNot (Lio/sentry/Hint;Ljava/lang/Class;Lio/sentry/ILogger;Lio/sentry/util/HintUtils$SentryConsumer;)V
	public static fun setIsFromHybridSdk (Lio/sentry/Hint;Ljava/lang/String;)V
	public static fun setTypeCheckHint (Lio/sentry/Hint;Ljava/lang/Object;)V
	public static fun shouldApplyScopeData (Lio/sentry/Hint;)Z
}

public abstract interface class io/sentry/util/HintUtils$SentryConsumer {
	public abstract fun accept (Ljava/lang/Object;)V
}

public abstract interface class io/sentry/util/HintUtils$SentryHintFallback {
	public abstract fun accept (Ljava/lang/Object;Ljava/lang/Class;)V
}

public abstract interface class io/sentry/util/HintUtils$SentryNullableConsumer {
	public abstract fun accept (Ljava/lang/Object;)V
}

public final class io/sentry/util/HttpUtils {
	public static final field COOKIE_HEADER_NAME Ljava/lang/String;
	public fun <init> ()V
	public static fun containsSensitiveHeader (Ljava/lang/String;)Z
	public static fun filterOutSecurityCookies (Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;
	public static fun filterOutSecurityCookiesFromHeader (Ljava/util/Enumeration;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
	public static fun filterOutSecurityCookiesFromHeader (Ljava/util/List;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
	public static fun isSecurityCookie (Ljava/lang/String;Ljava/util/List;)Z
}

public final class io/sentry/util/JsonSerializationUtils {
	public fun <init> ()V
	public static fun atomicIntegerArrayToList (Ljava/util/concurrent/atomic/AtomicIntegerArray;)Ljava/util/List;
	public static fun bytesFrom (Lio/sentry/ISerializer;Lio/sentry/ILogger;Lio/sentry/JsonSerializable;)[B
	public static fun calendarToMap (Ljava/util/Calendar;)Ljava/util/Map;
}

public final class io/sentry/util/LogUtils {
	public fun <init> ()V
	public static fun logNotInstanceOf (Ljava/lang/Class;Ljava/lang/Object;Lio/sentry/ILogger;)V
}

public final class io/sentry/util/Objects {
	public static fun equals (Ljava/lang/Object;Ljava/lang/Object;)Z
	public static fun hash ([Ljava/lang/Object;)I
	public static fun requireNonNull (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
}

public final class io/sentry/util/Pair {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;)V
	public fun getFirst ()Ljava/lang/Object;
	public fun getSecond ()Ljava/lang/Object;
}

public final class io/sentry/util/Platform {
	public fun <init> ()V
	public static fun isAndroid ()Z
	public static fun isJavaNinePlus ()Z
	public static fun isJvm ()Z
}

public final class io/sentry/util/PropagationTargetsUtils {
	public fun <init> ()V
	public static fun contain (Ljava/util/List;Ljava/lang/String;)Z
	public static fun contain (Ljava/util/List;Ljava/net/URI;)Z
}

public final class io/sentry/util/SampleRateUtils {
	public fun <init> ()V
	public static fun isValidProfilesSampleRate (Ljava/lang/Double;)Z
	public static fun isValidSampleRate (Ljava/lang/Double;)Z
	public static fun isValidTracesSampleRate (Ljava/lang/Double;)Z
	public static fun isValidTracesSampleRate (Ljava/lang/Double;Z)Z
}

public final class io/sentry/util/StringUtils {
	public static fun byteCountToString (J)Ljava/lang/String;
	public static fun calculateStringHash (Ljava/lang/String;Lio/sentry/ILogger;)Ljava/lang/String;
	public static fun capitalize (Ljava/lang/String;)Ljava/lang/String;
	public static fun countOf (Ljava/lang/String;C)I
	public static fun getStringAfterDot (Ljava/lang/String;)Ljava/lang/String;
	public static fun normalizeUUID (Ljava/lang/String;)Ljava/lang/String;
	public static fun removeSurrounding (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
}

public final class io/sentry/util/UrlUtils {
	public static final field SENSITIVE_DATA_SUBSTITUTE Ljava/lang/String;
	public fun <init> ()V
	public static fun parse (Ljava/lang/String;)Lio/sentry/util/UrlUtils$UrlDetails;
	public static fun parseNullable (Ljava/lang/String;)Lio/sentry/util/UrlUtils$UrlDetails;
}

public final class io/sentry/util/UrlUtils$UrlDetails {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public fun applyToRequest (Lio/sentry/protocol/Request;)V
	public fun applyToSpan (Lio/sentry/ISpan;)V
	public fun getFragment ()Ljava/lang/String;
	public fun getQuery ()Ljava/lang/String;
	public fun getUrl ()Ljava/lang/String;
	public fun getUrlOrFallback ()Ljava/lang/String;
}

public abstract interface class io/sentry/util/thread/IMainThreadChecker {
	public fun isMainThread ()Z
	public abstract fun isMainThread (J)Z
	public fun isMainThread (Lio/sentry/protocol/SentryThread;)Z
	public fun isMainThread (Ljava/lang/Thread;)Z
}

public final class io/sentry/util/thread/MainThreadChecker : io/sentry/util/thread/IMainThreadChecker {
	public static fun getInstance ()Lio/sentry/util/thread/MainThreadChecker;
	public fun isMainThread (J)Z
}

public final class io/sentry/util/thread/NoOpMainThreadChecker : io/sentry/util/thread/IMainThreadChecker {
	public fun <init> ()V
	public static fun getInstance ()Lio/sentry/util/thread/NoOpMainThreadChecker;
	public fun isMainThread (J)Z
}

public class io/sentry/vendor/Base64 {
	public static final field CRLF I
	public static final field DEFAULT I
	public static final field NO_CLOSE I
	public static final field NO_PADDING I
	public static final field NO_WRAP I
	public static final field URL_SAFE I
	public static fun decode (Ljava/lang/String;I)[B
	public static fun decode ([BI)[B
	public static fun decode ([BIII)[B
	public static fun encode ([BI)[B
	public static fun encode ([BIII)[B
	public static fun encodeToString ([BI)Ljava/lang/String;
	public static fun encodeToString ([BIII)Ljava/lang/String;
}

public class io/sentry/vendor/gson/internal/bind/util/ISO8601Utils {
	public static final field TIMEZONE_UTC Ljava/util/TimeZone;
	public fun <init> ()V
	public static fun format (Ljava/util/Date;)Ljava/lang/String;
	public static fun format (Ljava/util/Date;Z)Ljava/lang/String;
	public static fun format (Ljava/util/Date;ZLjava/util/TimeZone;)Ljava/lang/String;
	public static fun parse (Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;
}

public class io/sentry/vendor/gson/stream/JsonReader : java/io/Closeable {
	public fun <init> (Ljava/io/Reader;)V
	public fun beginArray ()V
	public fun beginObject ()V
	public fun close ()V
	public fun endArray ()V
	public fun endObject ()V
	public fun getPath ()Ljava/lang/String;
	public fun hasNext ()Z
	public final fun isLenient ()Z
	public fun nextBoolean ()Z
	public fun nextDouble ()D
	public fun nextInt ()I
	public fun nextLong ()J
	public fun nextName ()Ljava/lang/String;
	public fun nextNull ()V
	public fun nextString ()Ljava/lang/String;
	public fun peek ()Lio/sentry/vendor/gson/stream/JsonToken;
	public final fun setLenient (Z)V
	public fun skipValue ()V
	public fun toString ()Ljava/lang/String;
}

public final class io/sentry/vendor/gson/stream/JsonToken : java/lang/Enum {
	public static final field BEGIN_ARRAY Lio/sentry/vendor/gson/stream/JsonToken;
	public static final field BEGIN_OBJECT Lio/sentry/vendor/gson/stream/JsonToken;
	public static final field BOOLEAN Lio/sentry/vendor/gson/stream/JsonToken;
	public static final field END_ARRAY Lio/sentry/vendor/gson/stream/JsonToken;
	public static final field END_DOCUMENT Lio/sentry/vendor/gson/stream/JsonToken;
	public static final field END_OBJECT Lio/sentry/vendor/gson/stream/JsonToken;
	public static final field NAME Lio/sentry/vendor/gson/stream/JsonToken;
	public static final field NULL Lio/sentry/vendor/gson/stream/JsonToken;
	public static final field NUMBER Lio/sentry/vendor/gson/stream/JsonToken;
	public static final field STRING Lio/sentry/vendor/gson/stream/JsonToken;
	public static fun valueOf (Ljava/lang/String;)Lio/sentry/vendor/gson/stream/JsonToken;
	public static fun values ()[Lio/sentry/vendor/gson/stream/JsonToken;
}

public class io/sentry/vendor/gson/stream/JsonWriter : java/io/Closeable, java/io/Flushable {
	public fun <init> (Ljava/io/Writer;)V
	public fun beginArray ()Lio/sentry/vendor/gson/stream/JsonWriter;
	public fun beginObject ()Lio/sentry/vendor/gson/stream/JsonWriter;
	public fun close ()V
	public fun endArray ()Lio/sentry/vendor/gson/stream/JsonWriter;
	public fun endObject ()Lio/sentry/vendor/gson/stream/JsonWriter;
	public fun flush ()V
	public final fun getSerializeNulls ()Z
	public final fun isHtmlSafe ()Z
	public fun isLenient ()Z
	public fun jsonValue (Ljava/lang/String;)Lio/sentry/vendor/gson/stream/JsonWriter;
	public fun name (Ljava/lang/String;)Lio/sentry/vendor/gson/stream/JsonWriter;
	public fun nullValue ()Lio/sentry/vendor/gson/stream/JsonWriter;
	public final fun setHtmlSafe (Z)V
	public final fun setIndent (Ljava/lang/String;)V
	public final fun setLenient (Z)V
	public final fun setSerializeNulls (Z)V
	public fun value (D)Lio/sentry/vendor/gson/stream/JsonWriter;
	public fun value (J)Lio/sentry/vendor/gson/stream/JsonWriter;
	public fun value (Ljava/lang/Boolean;)Lio/sentry/vendor/gson/stream/JsonWriter;
	public fun value (Ljava/lang/Number;)Lio/sentry/vendor/gson/stream/JsonWriter;
	public fun value (Ljava/lang/String;)Lio/sentry/vendor/gson/stream/JsonWriter;
	public fun value (Z)Lio/sentry/vendor/gson/stream/JsonWriter;
}

public final class io/sentry/vendor/gson/stream/MalformedJsonException : java/io/IOException {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

